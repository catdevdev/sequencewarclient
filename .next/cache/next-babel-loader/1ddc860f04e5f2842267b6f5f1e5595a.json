{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { EMIT_CREATED_ROOM, ON_CREATED_ROOM, EMIT_ENTER_IN_ROOM, ON_ENTER_IN_ROOM, EMIT_LEAVE_FROM_ROOM, ON_LEAVE_FROM_ROOM, EMIT_START_GAME, ON_START_GAME } from '../actiontypes';\nconst initialState = {};\nexport const roomReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alert: action.payload\n      });\n\n    case HIDE_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alert: null\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/redux/reducers/room.js"],"names":["EMIT_CREATED_ROOM","ON_CREATED_ROOM","EMIT_ENTER_IN_ROOM","ON_ENTER_IN_ROOM","EMIT_LEAVE_FROM_ROOM","ON_LEAVE_FROM_ROOM","EMIT_START_GAME","ON_START_GAME","initialState","roomReducer","state","action","type","SHOW_ALERT","alert","payload","HIDE_ALERT"],"mappings":";;;;;;AAAA,SACEA,iBADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,gBAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,eAPF,EAQEC,aARF,QASO,gBATP;AAWA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,UAAL;AACE,6CAAYH,KAAZ;AAAmBI,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAAjC;;AACF,SAAKC,UAAL;AACE,6CAAYN,KAAZ;AAAmBI,QAAAA,KAAK,EAAE;AAA1B;;AAEF;AACE,aAAOJ,KAAP;AAPJ;AASD,CAVM","sourcesContent":["import {\n  EMIT_CREATED_ROOM,\n  ON_CREATED_ROOM,\n  EMIT_ENTER_IN_ROOM,\n  ON_ENTER_IN_ROOM,\n  EMIT_LEAVE_FROM_ROOM,\n  ON_LEAVE_FROM_ROOM,\n  EMIT_START_GAME,\n  ON_START_GAME,\n} from '../actiontypes';\n\nconst initialState = {};\n\nexport const roomReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_ALERT:\n      return { ...state, alert: action.payload };\n    case HIDE_ALERT:\n      return { ...state, alert: null };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}