{"ast":null,"code":"/*\n * Name          : joy.js\n * @author       : Roberto D'Amico (Bobboteck)\n * Last modified : 09.06.2020\n * Revision      : 1.1.6\n *\n * Modification History:\n * Date         Version     Modified By\t\tDescription\n * 2020-06-09\t1.1.6\t\tRoberto D'Amico\tFixed Issue #10 and #11\n * 2020-04-20\t1.1.5\t\tRoberto D'Amico\tCorrect: Two sticks in a row, thanks to @liamw9534 for the suggestion\n * 2020-04-03               Roberto D'Amico Correct: InternalRadius when change the size of canvas, thanks to @vanslipon for the suggestion\n * 2020-01-07\t1.1.4\t\tRoberto D'Amico Close #6 by implementing a new parameter to set the functionality of auto-return to 0 position\n * 2019-11-18\t1.1.3\t\tRoberto D'Amico\tClose #5 correct indication of East direction\n * 2019-11-12   1.1.2       Roberto D'Amico Removed Fix #4 incorrectly introduced and restored operation with touch devices\n * 2019-11-12   1.1.1       Roberto D'Amico Fixed Issue #4 - Now JoyStick work in any position in the page, not only at 0,0\n *\n * The MIT License (MIT)\n *\n *  This file is part of the JoyStick Project (https://github.com/bobboteck/JoyStick).\n *\tCopyright (c) 2015 Roberto D'Amico (Bobboteck).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @desc Principal object that draw a joystick, you only need to initialize the object and suggest the HTML container\n * @costructor\n * @param container {String} - HTML object that contains the Joystick\n * @param parameters (optional) - object with following keys:\n *\ttitle {String} (optional) - The ID of canvas (Default value is 'joystick')\n * \twidth {Int} (optional) - The width of canvas, if not specified is setted at width of container object (Default value is the width of container object)\n * \theight {Int} (optional) - The height of canvas, if not specified is setted at height of container object (Default value is the height of container object)\n * \tinternalFillColor {String} (optional) - Internal color of Stick (Default value is '#00AA00')\n * \tinternalLineWidth {Int} (optional) - Border width of Stick (Default value is 2)\n * \tinternalStrokeColor {String}(optional) - Border color of Stick (Default value is '#003300')\n * \texternalLineWidth {Int} (optional) - External reference circonference width (Default value is 2)\n * \texternalStrokeColor {String} (optional) - External reference circonference color (Default value is '#008000')\n * \tautoReturnToCenter {Bool} (optional) - Sets the behavior of the stick, whether or not, it should return to zero position when released (Default value is True and return to zero)\n */\nimport React, { use } from 'react';\n\nvar JoyStick = function JoyStick(container, parameters) {\n  parameters = parameters || {};\n  var title = typeof parameters.title === 'undefined' ? 'joystick' : parameters.title,\n      width = typeof parameters.width === 'undefined' ? 0 : parameters.width,\n      height = typeof parameters.height === 'undefined' ? 0 : parameters.height,\n      internalFillColor = typeof parameters.internalFillColor === 'undefined' ? '#00AA00' : parameters.internalFillColor,\n      internalLineWidth = typeof parameters.internalLineWidth === 'undefined' ? 2 : parameters.internalLineWidth,\n      internalStrokeColor = typeof parameters.internalStrokeColor === 'undefined' ? '#003300' : parameters.internalStrokeColor,\n      externalLineWidth = typeof parameters.externalLineWidth === 'undefined' ? 2 : parameters.externalLineWidth,\n      externalStrokeColor = typeof parameters.externalStrokeColor === 'undefined' ? '#008000' : parameters.externalStrokeColor,\n      autoReturnToCenter = typeof parameters.autoReturnToCenter === 'undefined' ? true : parameters.autoReturnToCenter; // Create Canvas element and add it in the Container object\n\n  var objContainer = document.getElementById(container);\n  var canvas = document.createElement('canvas');\n  canvas.id = title;\n\n  if (width === 0) {\n    width = objContainer.clientWidth;\n  }\n\n  if (height === 0) {\n    height = objContainer.clientHeight;\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n  objContainer.appendChild(canvas);\n  var context = canvas.getContext('2d');\n  var pressed = 0; // Bool - 1=Yes - 0=No\n\n  var circumference = 2 * Math.PI;\n  var internalRadius = (canvas.width - (canvas.width / 2 + 10)) / 2;\n  var maxMoveStick = internalRadius + 5;\n  var externalRadius = internalRadius + 30;\n  var centerX = canvas.width / 2;\n  var centerY = canvas.height / 2;\n  var directionHorizontalLimitPos = canvas.width / 10;\n  var directionHorizontalLimitNeg = directionHorizontalLimitPos * -1;\n  var directionVerticalLimitPos = canvas.height / 10;\n  var directionVerticalLimitNeg = directionVerticalLimitPos * -1; // Used to save current position of stick\n\n  var movedX = centerX;\n  var movedY = centerY; // Check if the device support the touch or not\n\n  if ('ontouchstart' in document.documentElement) {\n    canvas.addEventListener('touchstart', onTouchStart, false);\n    canvas.addEventListener('touchmove', onTouchMove, false);\n    canvas.addEventListener('touchend', onTouchEnd, false);\n  } else {\n    canvas.addEventListener('mousedown', onMouseDown, false);\n    canvas.addEventListener('mousemove', onMouseMove, false);\n    canvas.addEventListener('mouseup', onMouseUp, false);\n  } // Draw the object\n\n\n  drawExternal();\n  drawInternal();\n  /******************************************************\n   * Private methods\n   *****************************************************/\n\n  /**\n   * @desc Draw the external circle used as reference position\n   */\n\n  function drawExternal() {\n    context.beginPath();\n    context.arc(centerX, centerY, externalRadius, 0, circumference, false);\n    context.lineWidth = externalLineWidth;\n    context.strokeStyle = externalStrokeColor;\n    context.stroke();\n  }\n  /**\n   * @desc Draw the internal stick in the current position the user have moved it\n   */\n\n\n  function drawInternal() {\n    context.beginPath();\n\n    if (movedX < internalRadius) {\n      movedX = maxMoveStick;\n    }\n\n    if (movedX + internalRadius > canvas.width) {\n      movedX = canvas.width - maxMoveStick;\n    }\n\n    if (movedY < internalRadius) {\n      movedY = maxMoveStick;\n    }\n\n    if (movedY + internalRadius > canvas.height) {\n      movedY = canvas.height - maxMoveStick;\n    }\n\n    context.arc(movedX, movedY, internalRadius, 0, circumference, false); // create radial gradient\n\n    var grd = context.createRadialGradient(centerX, centerY, 5, centerX, centerY, 200); // Light color\n\n    grd.addColorStop(0, internalFillColor); // Dark color\n\n    grd.addColorStop(1, internalStrokeColor);\n    context.fillStyle = grd;\n    context.fill();\n    context.lineWidth = internalLineWidth;\n    context.strokeStyle = internalStrokeColor;\n    context.stroke();\n  }\n  /**\n   * @desc Events for manage touch\n   */\n\n\n  function onTouchStart(event) {\n    pressed = 1;\n  }\n\n  function onTouchMove(event) {\n    // Prevent the browser from doing its default thing (scroll, zoom)\n    event.preventDefault();\n\n    if (pressed === 1 && event.targetTouches[0].target === canvas) {\n      movedX = event.targetTouches[0].pageX;\n      movedY = event.targetTouches[0].pageY; // Manage offset\n\n      if (canvas.offsetParent.tagName.toUpperCase() === 'BODY') {\n        movedX -= canvas.offsetLeft;\n        movedY -= canvas.offsetTop;\n      } else {\n        movedX -= canvas.offsetParent.offsetLeft;\n        movedY -= canvas.offsetParent.offsetTop;\n      } // Delete canvas\n\n\n      context.clearRect(0, 0, canvas.width, canvas.height); // Redraw object\n\n      drawExternal();\n      drawInternal();\n    }\n  }\n\n  function onTouchEnd(event) {\n    pressed = 0; // If required reset position store variable\n\n    if (autoReturnToCenter) {\n      movedX = centerX;\n      movedY = centerY;\n    } // Delete canvas\n\n\n    context.clearRect(0, 0, canvas.width, canvas.height); // Redraw object\n\n    drawExternal();\n    drawInternal(); //canvas.unbind('touchmove');\n  }\n  /**\n   * @desc Events for manage mouse\n   */\n\n\n  function onMouseDown(event) {\n    pressed = 1;\n  }\n\n  function onMouseMove(event) {\n    if (pressed === 1) {\n      movedX = event.pageX;\n      movedY = event.pageY; // Manage offset\n\n      if (canvas.offsetParent.tagName.toUpperCase() === 'BODY') {\n        movedX -= canvas.offsetLeft;\n        movedY -= canvas.offsetTop;\n      } else {\n        movedX -= canvas.offsetParent.offsetLeft;\n        movedY -= canvas.offsetParent.offsetTop;\n      } // Delete canvas\n\n\n      context.clearRect(0, 0, canvas.width, canvas.height); // Redraw object\n\n      drawExternal();\n      drawInternal();\n    }\n  }\n\n  function onMouseUp(event) {\n    pressed = 0; // If required reset position store variable\n\n    if (autoReturnToCenter) {\n      movedX = centerX;\n      movedY = centerY;\n    } // Delete canvas\n\n\n    context.clearRect(0, 0, canvas.width, canvas.height); // Redraw object\n\n    drawExternal();\n    drawInternal(); //canvas.unbind('mousemove');\n  }\n  /******************************************************\n   * Public methods\n   *****************************************************/\n\n  /**\n   * @desc The width of canvas\n   * @return Number of pixel width\n   */\n\n\n  this.GetWidth = function () {\n    return canvas.width;\n  };\n  /**\n   * @desc The height of canvas\n   * @return Number of pixel height\n   */\n\n\n  this.GetHeight = function () {\n    return canvas.height;\n  };\n  /**\n   * @desc The X position of the cursor relative to the canvas that contains it and to its dimensions\n   * @return Number that indicate relative position\n   */\n\n\n  this.GetPosX = function () {\n    return movedX;\n  };\n  /**\n   * @desc The Y position of the cursor relative to the canvas that contains it and to its dimensions\n   * @return Number that indicate relative position\n   */\n\n\n  this.GetPosY = function () {\n    return movedY;\n  };\n  /**\n   * @desc Normalizzed value of X move of stick\n   * @return Integer from -100 to +100\n   */\n\n\n  this.GetX = function () {\n    return (100 * ((movedX - centerX) / maxMoveStick)).toFixed();\n  };\n  /**\n   * @desc Normalizzed value of Y move of stick\n   * @return Integer from -100 to +100\n   */\n\n\n  this.GetY = function () {\n    return (100 * ((movedY - centerY) / maxMoveStick) * -1).toFixed();\n  };\n  /**\n   * @desc Get the direction of the cursor as a string that indicates the cardinal points where this is oriented\n   * @return String of cardinal point N, NE, E, SE, S, SW, W, NW and C when it is placed in the center\n   */\n\n\n  this.GetDir = function () {\n    var result = '';\n    var orizontal = movedX - centerX;\n    var vertical = movedY - centerY;\n\n    if (vertical >= directionVerticalLimitNeg && vertical <= directionVerticalLimitPos) {\n      result = 'C';\n    }\n\n    if (vertical < directionVerticalLimitNeg) {\n      result = 'N';\n    }\n\n    if (vertical > directionVerticalLimitPos) {\n      result = 'S';\n    }\n\n    if (orizontal < directionHorizontalLimitNeg) {\n      if (result === 'C') {\n        result = 'W';\n      } else {\n        result += 'W';\n      }\n    }\n\n    if (orizontal > directionHorizontalLimitPos) {\n      if (result === 'C') {\n        result = 'E';\n      } else {\n        result += 'E';\n      }\n    }\n\n    return result;\n  };\n};\n\n_c = JoyStick;\nexport { JoyStick };\n\nvar _c;\n\n$RefreshReg$(_c, \"JoyStick\");","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/utils/joy.js"],"names":["React","use","JoyStick","container","parameters","title","width","height","internalFillColor","internalLineWidth","internalStrokeColor","externalLineWidth","externalStrokeColor","autoReturnToCenter","objContainer","document","getElementById","canvas","createElement","id","clientWidth","clientHeight","appendChild","context","getContext","pressed","circumference","Math","PI","internalRadius","maxMoveStick","externalRadius","centerX","centerY","directionHorizontalLimitPos","directionHorizontalLimitNeg","directionVerticalLimitPos","directionVerticalLimitNeg","movedX","movedY","documentElement","addEventListener","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","drawExternal","drawInternal","beginPath","arc","lineWidth","strokeStyle","stroke","grd","createRadialGradient","addColorStop","fillStyle","fill","event","preventDefault","targetTouches","target","pageX","pageY","offsetParent","tagName","toUpperCase","offsetLeft","offsetTop","clearRect","GetWidth","GetHeight","GetPosX","GetPosY","GetX","toFixed","GetY","GetDir","result","orizontal","vertical"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;;;;;;;;;;;;;;AAgBA,OAAOA,KAAP,IAAeC,GAAf,QAAyB,OAAzB;;AAEA,IAAIC,QAAQ,GAAG,SAAXA,QAAW,CAAUC,SAAV,EAAqBC,UAArB,EAAiC;AAC9CA,EAAAA,UAAU,GAAGA,UAAU,IAAI,EAA3B;AACA,MAAIC,KAAK,GACL,OAAOD,UAAU,CAACC,KAAlB,KAA4B,WAA5B,GAA0C,UAA1C,GAAuDD,UAAU,CAACC,KADtE;AAAA,MAEEC,KAAK,GAAG,OAAOF,UAAU,CAACE,KAAlB,KAA4B,WAA5B,GAA0C,CAA1C,GAA8CF,UAAU,CAACE,KAFnE;AAAA,MAGEC,MAAM,GAAG,OAAOH,UAAU,CAACG,MAAlB,KAA6B,WAA7B,GAA2C,CAA3C,GAA+CH,UAAU,CAACG,MAHrE;AAAA,MAIEC,iBAAiB,GACf,OAAOJ,UAAU,CAACI,iBAAlB,KAAwC,WAAxC,GACI,SADJ,GAEIJ,UAAU,CAACI,iBAPnB;AAAA,MAQEC,iBAAiB,GACf,OAAOL,UAAU,CAACK,iBAAlB,KAAwC,WAAxC,GACI,CADJ,GAEIL,UAAU,CAACK,iBAXnB;AAAA,MAYEC,mBAAmB,GACjB,OAAON,UAAU,CAACM,mBAAlB,KAA0C,WAA1C,GACI,SADJ,GAEIN,UAAU,CAACM,mBAfnB;AAAA,MAgBEC,iBAAiB,GACf,OAAOP,UAAU,CAACO,iBAAlB,KAAwC,WAAxC,GACI,CADJ,GAEIP,UAAU,CAACO,iBAnBnB;AAAA,MAoBEC,mBAAmB,GACjB,OAAOR,UAAU,CAACQ,mBAAlB,KAA0C,WAA1C,GACI,SADJ,GAEIR,UAAU,CAACQ,mBAvBnB;AAAA,MAwBEC,kBAAkB,GAChB,OAAOT,UAAU,CAACS,kBAAlB,KAAyC,WAAzC,GACI,IADJ,GAEIT,UAAU,CAACS,kBA3BnB,CAF8C,CA+B9C;;AACA,MAAIC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwBb,SAAxB,CAAnB;AACA,MAAIc,MAAM,GAAGF,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAb;AACAD,EAAAA,MAAM,CAACE,EAAP,GAAYd,KAAZ;;AACA,MAAIC,KAAK,KAAK,CAAd,EAAiB;AACfA,IAAAA,KAAK,GAAGQ,YAAY,CAACM,WAArB;AACD;;AACD,MAAIb,MAAM,KAAK,CAAf,EAAkB;AAChBA,IAAAA,MAAM,GAAGO,YAAY,CAACO,YAAtB;AACD;;AACDJ,EAAAA,MAAM,CAACX,KAAP,GAAeA,KAAf;AACAW,EAAAA,MAAM,CAACV,MAAP,GAAgBA,MAAhB;AACAO,EAAAA,YAAY,CAACQ,WAAb,CAAyBL,MAAzB;AACA,MAAIM,OAAO,GAAGN,MAAM,CAACO,UAAP,CAAkB,IAAlB,CAAd;AAEA,MAAIC,OAAO,GAAG,CAAd,CA9C8C,CA8C7B;;AACjB,MAAIC,aAAa,GAAG,IAAIC,IAAI,CAACC,EAA7B;AACA,MAAIC,cAAc,GAAG,CAACZ,MAAM,CAACX,KAAP,IAAgBW,MAAM,CAACX,KAAP,GAAe,CAAf,GAAmB,EAAnC,CAAD,IAA2C,CAAhE;AACA,MAAIwB,YAAY,GAAGD,cAAc,GAAG,CAApC;AACA,MAAIE,cAAc,GAAGF,cAAc,GAAG,EAAtC;AACA,MAAIG,OAAO,GAAGf,MAAM,CAACX,KAAP,GAAe,CAA7B;AACA,MAAI2B,OAAO,GAAGhB,MAAM,CAACV,MAAP,GAAgB,CAA9B;AACA,MAAI2B,2BAA2B,GAAGjB,MAAM,CAACX,KAAP,GAAe,EAAjD;AACA,MAAI6B,2BAA2B,GAAGD,2BAA2B,GAAG,CAAC,CAAjE;AACA,MAAIE,yBAAyB,GAAGnB,MAAM,CAACV,MAAP,GAAgB,EAAhD;AACA,MAAI8B,yBAAyB,GAAGD,yBAAyB,GAAG,CAAC,CAA7D,CAxD8C,CAyD9C;;AACA,MAAIE,MAAM,GAAGN,OAAb;AACA,MAAIO,MAAM,GAAGN,OAAb,CA3D8C,CA6D9C;;AACA,MAAI,kBAAkBlB,QAAQ,CAACyB,eAA/B,EAAgD;AAC9CvB,IAAAA,MAAM,CAACwB,gBAAP,CAAwB,YAAxB,EAAsCC,YAAtC,EAAoD,KAApD;AACAzB,IAAAA,MAAM,CAACwB,gBAAP,CAAwB,WAAxB,EAAqCE,WAArC,EAAkD,KAAlD;AACA1B,IAAAA,MAAM,CAACwB,gBAAP,CAAwB,UAAxB,EAAoCG,UAApC,EAAgD,KAAhD;AACD,GAJD,MAIO;AACL3B,IAAAA,MAAM,CAACwB,gBAAP,CAAwB,WAAxB,EAAqCI,WAArC,EAAkD,KAAlD;AACA5B,IAAAA,MAAM,CAACwB,gBAAP,CAAwB,WAAxB,EAAqCK,WAArC,EAAkD,KAAlD;AACA7B,IAAAA,MAAM,CAACwB,gBAAP,CAAwB,SAAxB,EAAmCM,SAAnC,EAA8C,KAA9C;AACD,GAtE6C,CAuE9C;;;AACAC,EAAAA,YAAY;AACZC,EAAAA,YAAY;AAEZ;;;;AAIA;;;;AAGA,WAASD,YAAT,GAAwB;AACtBzB,IAAAA,OAAO,CAAC2B,SAAR;AACA3B,IAAAA,OAAO,CAAC4B,GAAR,CAAYnB,OAAZ,EAAqBC,OAArB,EAA8BF,cAA9B,EAA8C,CAA9C,EAAiDL,aAAjD,EAAgE,KAAhE;AACAH,IAAAA,OAAO,CAAC6B,SAAR,GAAoBzC,iBAApB;AACAY,IAAAA,OAAO,CAAC8B,WAAR,GAAsBzC,mBAAtB;AACAW,IAAAA,OAAO,CAAC+B,MAAR;AACD;AAED;;;;;AAGA,WAASL,YAAT,GAAwB;AACtB1B,IAAAA,OAAO,CAAC2B,SAAR;;AACA,QAAIZ,MAAM,GAAGT,cAAb,EAA6B;AAC3BS,MAAAA,MAAM,GAAGR,YAAT;AACD;;AACD,QAAIQ,MAAM,GAAGT,cAAT,GAA0BZ,MAAM,CAACX,KAArC,EAA4C;AAC1CgC,MAAAA,MAAM,GAAGrB,MAAM,CAACX,KAAP,GAAewB,YAAxB;AACD;;AACD,QAAIS,MAAM,GAAGV,cAAb,EAA6B;AAC3BU,MAAAA,MAAM,GAAGT,YAAT;AACD;;AACD,QAAIS,MAAM,GAAGV,cAAT,GAA0BZ,MAAM,CAACV,MAArC,EAA6C;AAC3CgC,MAAAA,MAAM,GAAGtB,MAAM,CAACV,MAAP,GAAgBuB,YAAzB;AACD;;AACDP,IAAAA,OAAO,CAAC4B,GAAR,CAAYb,MAAZ,EAAoBC,MAApB,EAA4BV,cAA5B,EAA4C,CAA5C,EAA+CH,aAA/C,EAA8D,KAA9D,EAdsB,CAetB;;AACA,QAAI6B,GAAG,GAAGhC,OAAO,CAACiC,oBAAR,CACRxB,OADQ,EAERC,OAFQ,EAGR,CAHQ,EAIRD,OAJQ,EAKRC,OALQ,EAMR,GANQ,CAAV,CAhBsB,CAwBtB;;AACAsB,IAAAA,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoBjD,iBAApB,EAzBsB,CA0BtB;;AACA+C,IAAAA,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoB/C,mBAApB;AACAa,IAAAA,OAAO,CAACmC,SAAR,GAAoBH,GAApB;AACAhC,IAAAA,OAAO,CAACoC,IAAR;AACApC,IAAAA,OAAO,CAAC6B,SAAR,GAAoB3C,iBAApB;AACAc,IAAAA,OAAO,CAAC8B,WAAR,GAAsB3C,mBAAtB;AACAa,IAAAA,OAAO,CAAC+B,MAAR;AACD;AAED;;;;;AAGA,WAASZ,YAAT,CAAsBkB,KAAtB,EAA6B;AAC3BnC,IAAAA,OAAO,GAAG,CAAV;AACD;;AAED,WAASkB,WAAT,CAAqBiB,KAArB,EAA4B;AAC1B;AACAA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIpC,OAAO,KAAK,CAAZ,IAAiBmC,KAAK,CAACE,aAAN,CAAoB,CAApB,EAAuBC,MAAvB,KAAkC9C,MAAvD,EAA+D;AAC7DqB,MAAAA,MAAM,GAAGsB,KAAK,CAACE,aAAN,CAAoB,CAApB,EAAuBE,KAAhC;AACAzB,MAAAA,MAAM,GAAGqB,KAAK,CAACE,aAAN,CAAoB,CAApB,EAAuBG,KAAhC,CAF6D,CAG7D;;AACA,UAAIhD,MAAM,CAACiD,YAAP,CAAoBC,OAApB,CAA4BC,WAA5B,OAA8C,MAAlD,EAA0D;AACxD9B,QAAAA,MAAM,IAAIrB,MAAM,CAACoD,UAAjB;AACA9B,QAAAA,MAAM,IAAItB,MAAM,CAACqD,SAAjB;AACD,OAHD,MAGO;AACLhC,QAAAA,MAAM,IAAIrB,MAAM,CAACiD,YAAP,CAAoBG,UAA9B;AACA9B,QAAAA,MAAM,IAAItB,MAAM,CAACiD,YAAP,CAAoBI,SAA9B;AACD,OAV4D,CAW7D;;;AACA/C,MAAAA,OAAO,CAACgD,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBtD,MAAM,CAACX,KAA/B,EAAsCW,MAAM,CAACV,MAA7C,EAZ6D,CAa7D;;AACAyC,MAAAA,YAAY;AACZC,MAAAA,YAAY;AACb;AACF;;AAED,WAASL,UAAT,CAAoBgB,KAApB,EAA2B;AACzBnC,IAAAA,OAAO,GAAG,CAAV,CADyB,CAEzB;;AACA,QAAIZ,kBAAJ,EAAwB;AACtByB,MAAAA,MAAM,GAAGN,OAAT;AACAO,MAAAA,MAAM,GAAGN,OAAT;AACD,KANwB,CAOzB;;;AACAV,IAAAA,OAAO,CAACgD,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBtD,MAAM,CAACX,KAA/B,EAAsCW,MAAM,CAACV,MAA7C,EARyB,CASzB;;AACAyC,IAAAA,YAAY;AACZC,IAAAA,YAAY,GAXa,CAYzB;AACD;AAED;;;;;AAGA,WAASJ,WAAT,CAAqBe,KAArB,EAA4B;AAC1BnC,IAAAA,OAAO,GAAG,CAAV;AACD;;AAED,WAASqB,WAAT,CAAqBc,KAArB,EAA4B;AAC1B,QAAInC,OAAO,KAAK,CAAhB,EAAmB;AACjBa,MAAAA,MAAM,GAAGsB,KAAK,CAACI,KAAf;AACAzB,MAAAA,MAAM,GAAGqB,KAAK,CAACK,KAAf,CAFiB,CAGjB;;AACA,UAAIhD,MAAM,CAACiD,YAAP,CAAoBC,OAApB,CAA4BC,WAA5B,OAA8C,MAAlD,EAA0D;AACxD9B,QAAAA,MAAM,IAAIrB,MAAM,CAACoD,UAAjB;AACA9B,QAAAA,MAAM,IAAItB,MAAM,CAACqD,SAAjB;AACD,OAHD,MAGO;AACLhC,QAAAA,MAAM,IAAIrB,MAAM,CAACiD,YAAP,CAAoBG,UAA9B;AACA9B,QAAAA,MAAM,IAAItB,MAAM,CAACiD,YAAP,CAAoBI,SAA9B;AACD,OAVgB,CAWjB;;;AACA/C,MAAAA,OAAO,CAACgD,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBtD,MAAM,CAACX,KAA/B,EAAsCW,MAAM,CAACV,MAA7C,EAZiB,CAajB;;AACAyC,MAAAA,YAAY;AACZC,MAAAA,YAAY;AACb;AACF;;AAED,WAASF,SAAT,CAAmBa,KAAnB,EAA0B;AACxBnC,IAAAA,OAAO,GAAG,CAAV,CADwB,CAExB;;AACA,QAAIZ,kBAAJ,EAAwB;AACtByB,MAAAA,MAAM,GAAGN,OAAT;AACAO,MAAAA,MAAM,GAAGN,OAAT;AACD,KANuB,CAOxB;;;AACAV,IAAAA,OAAO,CAACgD,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBtD,MAAM,CAACX,KAA/B,EAAsCW,MAAM,CAACV,MAA7C,EARwB,CASxB;;AACAyC,IAAAA,YAAY;AACZC,IAAAA,YAAY,GAXY,CAYxB;AACD;AAED;;;;AAIA;;;;;;AAIA,OAAKuB,QAAL,GAAgB,YAAY;AAC1B,WAAOvD,MAAM,CAACX,KAAd;AACD,GAFD;AAIA;;;;;;AAIA,OAAKmE,SAAL,GAAiB,YAAY;AAC3B,WAAOxD,MAAM,CAACV,MAAd;AACD,GAFD;AAIA;;;;;;AAIA,OAAKmE,OAAL,GAAe,YAAY;AACzB,WAAOpC,MAAP;AACD,GAFD;AAIA;;;;;;AAIA,OAAKqC,OAAL,GAAe,YAAY;AACzB,WAAOpC,MAAP;AACD,GAFD;AAIA;;;;;;AAIA,OAAKqC,IAAL,GAAY,YAAY;AACtB,WAAO,CAAC,OAAO,CAACtC,MAAM,GAAGN,OAAV,IAAqBF,YAA5B,CAAD,EAA4C+C,OAA5C,EAAP;AACD,GAFD;AAIA;;;;;;AAIA,OAAKC,IAAL,GAAY,YAAY;AACtB,WAAO,CAAC,OAAO,CAACvC,MAAM,GAAGN,OAAV,IAAqBH,YAA5B,IAA4C,CAAC,CAA9C,EAAiD+C,OAAjD,EAAP;AACD,GAFD;AAIA;;;;;;AAIA,OAAKE,MAAL,GAAc,YAAY;AACxB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,SAAS,GAAG3C,MAAM,GAAGN,OAAzB;AACA,QAAIkD,QAAQ,GAAG3C,MAAM,GAAGN,OAAxB;;AAEA,QACEiD,QAAQ,IAAI7C,yBAAZ,IACA6C,QAAQ,IAAI9C,yBAFd,EAGE;AACA4C,MAAAA,MAAM,GAAG,GAAT;AACD;;AACD,QAAIE,QAAQ,GAAG7C,yBAAf,EAA0C;AACxC2C,MAAAA,MAAM,GAAG,GAAT;AACD;;AACD,QAAIE,QAAQ,GAAG9C,yBAAf,EAA0C;AACxC4C,MAAAA,MAAM,GAAG,GAAT;AACD;;AAED,QAAIC,SAAS,GAAG9C,2BAAhB,EAA6C;AAC3C,UAAI6C,MAAM,KAAK,GAAf,EAAoB;AAClBA,QAAAA,MAAM,GAAG,GAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,IAAI,GAAV;AACD;AACF;;AACD,QAAIC,SAAS,GAAG/C,2BAAhB,EAA6C;AAC3C,UAAI8C,MAAM,KAAK,GAAf,EAAoB;AAClBA,QAAAA,MAAM,GAAG,GAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,IAAI,GAAV;AACD;AACF;;AAED,WAAOA,MAAP;AACD,GAlCD;AAmCD,CAjTD;;KAAI9E,Q;AAmTJ,SAASA,QAAT","sourcesContent":["/*\n * Name          : joy.js\n * @author       : Roberto D'Amico (Bobboteck)\n * Last modified : 09.06.2020\n * Revision      : 1.1.6\n *\n * Modification History:\n * Date         Version     Modified By\t\tDescription\n * 2020-06-09\t1.1.6\t\tRoberto D'Amico\tFixed Issue #10 and #11\n * 2020-04-20\t1.1.5\t\tRoberto D'Amico\tCorrect: Two sticks in a row, thanks to @liamw9534 for the suggestion\n * 2020-04-03               Roberto D'Amico Correct: InternalRadius when change the size of canvas, thanks to @vanslipon for the suggestion\n * 2020-01-07\t1.1.4\t\tRoberto D'Amico Close #6 by implementing a new parameter to set the functionality of auto-return to 0 position\n * 2019-11-18\t1.1.3\t\tRoberto D'Amico\tClose #5 correct indication of East direction\n * 2019-11-12   1.1.2       Roberto D'Amico Removed Fix #4 incorrectly introduced and restored operation with touch devices\n * 2019-11-12   1.1.1       Roberto D'Amico Fixed Issue #4 - Now JoyStick work in any position in the page, not only at 0,0\n *\n * The MIT License (MIT)\n *\n *  This file is part of the JoyStick Project (https://github.com/bobboteck/JoyStick).\n *\tCopyright (c) 2015 Roberto D'Amico (Bobboteck).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @desc Principal object that draw a joystick, you only need to initialize the object and suggest the HTML container\n * @costructor\n * @param container {String} - HTML object that contains the Joystick\n * @param parameters (optional) - object with following keys:\n *\ttitle {String} (optional) - The ID of canvas (Default value is 'joystick')\n * \twidth {Int} (optional) - The width of canvas, if not specified is setted at width of container object (Default value is the width of container object)\n * \theight {Int} (optional) - The height of canvas, if not specified is setted at height of container object (Default value is the height of container object)\n * \tinternalFillColor {String} (optional) - Internal color of Stick (Default value is '#00AA00')\n * \tinternalLineWidth {Int} (optional) - Border width of Stick (Default value is 2)\n * \tinternalStrokeColor {String}(optional) - Border color of Stick (Default value is '#003300')\n * \texternalLineWidth {Int} (optional) - External reference circonference width (Default value is 2)\n * \texternalStrokeColor {String} (optional) - External reference circonference color (Default value is '#008000')\n * \tautoReturnToCenter {Bool} (optional) - Sets the behavior of the stick, whether or not, it should return to zero position when released (Default value is True and return to zero)\n */\n\nimport React, {use} from 'react';\n\nvar JoyStick = function (container, parameters) {\n  parameters = parameters || {};\n  var title =\n      typeof parameters.title === 'undefined' ? 'joystick' : parameters.title,\n    width = typeof parameters.width === 'undefined' ? 0 : parameters.width,\n    height = typeof parameters.height === 'undefined' ? 0 : parameters.height,\n    internalFillColor =\n      typeof parameters.internalFillColor === 'undefined'\n        ? '#00AA00'\n        : parameters.internalFillColor,\n    internalLineWidth =\n      typeof parameters.internalLineWidth === 'undefined'\n        ? 2\n        : parameters.internalLineWidth,\n    internalStrokeColor =\n      typeof parameters.internalStrokeColor === 'undefined'\n        ? '#003300'\n        : parameters.internalStrokeColor,\n    externalLineWidth =\n      typeof parameters.externalLineWidth === 'undefined'\n        ? 2\n        : parameters.externalLineWidth,\n    externalStrokeColor =\n      typeof parameters.externalStrokeColor === 'undefined'\n        ? '#008000'\n        : parameters.externalStrokeColor,\n    autoReturnToCenter =\n      typeof parameters.autoReturnToCenter === 'undefined'\n        ? true\n        : parameters.autoReturnToCenter;\n\n  // Create Canvas element and add it in the Container object\n  var objContainer = document.getElementById(container);\n  var canvas = document.createElement('canvas');\n  canvas.id = title;\n  if (width === 0) {\n    width = objContainer.clientWidth;\n  }\n  if (height === 0) {\n    height = objContainer.clientHeight;\n  }\n  canvas.width = width;\n  canvas.height = height;\n  objContainer.appendChild(canvas);\n  var context = canvas.getContext('2d');\n\n  var pressed = 0; // Bool - 1=Yes - 0=No\n  var circumference = 2 * Math.PI;\n  var internalRadius = (canvas.width - (canvas.width / 2 + 10)) / 2;\n  var maxMoveStick = internalRadius + 5;\n  var externalRadius = internalRadius + 30;\n  var centerX = canvas.width / 2;\n  var centerY = canvas.height / 2;\n  var directionHorizontalLimitPos = canvas.width / 10;\n  var directionHorizontalLimitNeg = directionHorizontalLimitPos * -1;\n  var directionVerticalLimitPos = canvas.height / 10;\n  var directionVerticalLimitNeg = directionVerticalLimitPos * -1;\n  // Used to save current position of stick\n  var movedX = centerX;\n  var movedY = centerY;\n\n  // Check if the device support the touch or not\n  if ('ontouchstart' in document.documentElement) {\n    canvas.addEventListener('touchstart', onTouchStart, false);\n    canvas.addEventListener('touchmove', onTouchMove, false);\n    canvas.addEventListener('touchend', onTouchEnd, false);\n  } else {\n    canvas.addEventListener('mousedown', onMouseDown, false);\n    canvas.addEventListener('mousemove', onMouseMove, false);\n    canvas.addEventListener('mouseup', onMouseUp, false);\n  }\n  // Draw the object\n  drawExternal();\n  drawInternal();\n\n  /******************************************************\n   * Private methods\n   *****************************************************/\n\n  /**\n   * @desc Draw the external circle used as reference position\n   */\n  function drawExternal() {\n    context.beginPath();\n    context.arc(centerX, centerY, externalRadius, 0, circumference, false);\n    context.lineWidth = externalLineWidth;\n    context.strokeStyle = externalStrokeColor;\n    context.stroke();\n  }\n\n  /**\n   * @desc Draw the internal stick in the current position the user have moved it\n   */\n  function drawInternal() {\n    context.beginPath();\n    if (movedX < internalRadius) {\n      movedX = maxMoveStick;\n    }\n    if (movedX + internalRadius > canvas.width) {\n      movedX = canvas.width - maxMoveStick;\n    }\n    if (movedY < internalRadius) {\n      movedY = maxMoveStick;\n    }\n    if (movedY + internalRadius > canvas.height) {\n      movedY = canvas.height - maxMoveStick;\n    }\n    context.arc(movedX, movedY, internalRadius, 0, circumference, false);\n    // create radial gradient\n    var grd = context.createRadialGradient(\n      centerX,\n      centerY,\n      5,\n      centerX,\n      centerY,\n      200\n    );\n    // Light color\n    grd.addColorStop(0, internalFillColor);\n    // Dark color\n    grd.addColorStop(1, internalStrokeColor);\n    context.fillStyle = grd;\n    context.fill();\n    context.lineWidth = internalLineWidth;\n    context.strokeStyle = internalStrokeColor;\n    context.stroke();\n  }\n\n  /**\n   * @desc Events for manage touch\n   */\n  function onTouchStart(event) {\n    pressed = 1;\n  }\n\n  function onTouchMove(event) {\n    // Prevent the browser from doing its default thing (scroll, zoom)\n    event.preventDefault();\n    if (pressed === 1 && event.targetTouches[0].target === canvas) {\n      movedX = event.targetTouches[0].pageX;\n      movedY = event.targetTouches[0].pageY;\n      // Manage offset\n      if (canvas.offsetParent.tagName.toUpperCase() === 'BODY') {\n        movedX -= canvas.offsetLeft;\n        movedY -= canvas.offsetTop;\n      } else {\n        movedX -= canvas.offsetParent.offsetLeft;\n        movedY -= canvas.offsetParent.offsetTop;\n      }\n      // Delete canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // Redraw object\n      drawExternal();\n      drawInternal();\n    }\n  }\n\n  function onTouchEnd(event) {\n    pressed = 0;\n    // If required reset position store variable\n    if (autoReturnToCenter) {\n      movedX = centerX;\n      movedY = centerY;\n    }\n    // Delete canvas\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    // Redraw object\n    drawExternal();\n    drawInternal();\n    //canvas.unbind('touchmove');\n  }\n\n  /**\n   * @desc Events for manage mouse\n   */\n  function onMouseDown(event) {\n    pressed = 1;\n  }\n\n  function onMouseMove(event) {\n    if (pressed === 1) {\n      movedX = event.pageX;\n      movedY = event.pageY;\n      // Manage offset\n      if (canvas.offsetParent.tagName.toUpperCase() === 'BODY') {\n        movedX -= canvas.offsetLeft;\n        movedY -= canvas.offsetTop;\n      } else {\n        movedX -= canvas.offsetParent.offsetLeft;\n        movedY -= canvas.offsetParent.offsetTop;\n      }\n      // Delete canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // Redraw object\n      drawExternal();\n      drawInternal();\n    }\n  }\n\n  function onMouseUp(event) {\n    pressed = 0;\n    // If required reset position store variable\n    if (autoReturnToCenter) {\n      movedX = centerX;\n      movedY = centerY;\n    }\n    // Delete canvas\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    // Redraw object\n    drawExternal();\n    drawInternal();\n    //canvas.unbind('mousemove');\n  }\n\n  /******************************************************\n   * Public methods\n   *****************************************************/\n\n  /**\n   * @desc The width of canvas\n   * @return Number of pixel width\n   */\n  this.GetWidth = function () {\n    return canvas.width;\n  };\n\n  /**\n   * @desc The height of canvas\n   * @return Number of pixel height\n   */\n  this.GetHeight = function () {\n    return canvas.height;\n  };\n\n  /**\n   * @desc The X position of the cursor relative to the canvas that contains it and to its dimensions\n   * @return Number that indicate relative position\n   */\n  this.GetPosX = function () {\n    return movedX;\n  };\n\n  /**\n   * @desc The Y position of the cursor relative to the canvas that contains it and to its dimensions\n   * @return Number that indicate relative position\n   */\n  this.GetPosY = function () {\n    return movedY;\n  };\n\n  /**\n   * @desc Normalizzed value of X move of stick\n   * @return Integer from -100 to +100\n   */\n  this.GetX = function () {\n    return (100 * ((movedX - centerX) / maxMoveStick)).toFixed();\n  };\n\n  /**\n   * @desc Normalizzed value of Y move of stick\n   * @return Integer from -100 to +100\n   */\n  this.GetY = function () {\n    return (100 * ((movedY - centerY) / maxMoveStick) * -1).toFixed();\n  };\n\n  /**\n   * @desc Get the direction of the cursor as a string that indicates the cardinal points where this is oriented\n   * @return String of cardinal point N, NE, E, SE, S, SW, W, NW and C when it is placed in the center\n   */\n  this.GetDir = function () {\n    var result = '';\n    var orizontal = movedX - centerX;\n    var vertical = movedY - centerY;\n\n    if (\n      vertical >= directionVerticalLimitNeg &&\n      vertical <= directionVerticalLimitPos\n    ) {\n      result = 'C';\n    }\n    if (vertical < directionVerticalLimitNeg) {\n      result = 'N';\n    }\n    if (vertical > directionVerticalLimitPos) {\n      result = 'S';\n    }\n\n    if (orizontal < directionHorizontalLimitNeg) {\n      if (result === 'C') {\n        result = 'W';\n      } else {\n        result += 'W';\n      }\n    }\n    if (orizontal > directionHorizontalLimitPos) {\n      if (result === 'C') {\n        result = 'E';\n      } else {\n        result += 'E';\n      }\n    }\n\n    return result;\n  };\n};\n\nexport { JoyStick };\n"]},"metadata":{},"sourceType":"module"}