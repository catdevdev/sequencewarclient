{"ast":null,"code":"/* imports */\nimport { useEffect } from 'react';\nimport { socket } from '../../Socket';\nimport { useRouter } from 'next/router';\n/* redux */\n\nimport { useSelector } from 'react-redux';\nimport { writeRooms, addRoom, removeRoom } from '../../../redux/actions/Rooms';\nimport { onMessages, addMessage } from '../../../redux/actions/Chat';\nimport { onUser } from '../../../redux/actions/InputName';\nimport { hideModalInputUser, showModalAlert } from '../../../redux/actions/Modals';\nimport { onUsers } from '../../../redux/actions/Users';\nimport { setYouIsCreatorRoom, writeRoomId, setCurrentRoom, setYouIsVisitor, setUsersCurrentRoom, addUserCurrentRoom, removeUserCurrentRoom, resetCurrentRoom } from '../../../redux/actions/Room';\n\nconst SocketCalls = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  useEffect(() => {\n    socket.on('user', user => {\n      dispatch(onUser(user));\n      dispatch(hideModalInputUser());\n    });\n    socket.on('users', users => {\n      dispatch(onUsers(users));\n    });\n    socket.on('message', message => {\n      dispatch(addMessage(message));\n    });\n    socket.on('rooms', rooms => {\n      dispatch(writeRooms(rooms));\n    });\n    socket.on('addedRoom', room => {\n      dispatch(addRoom(room));\n    });\n    socket.on('removeRoom', id => {\n      dispatch(removeRoom(id));\n    });\n    socket.on('createdRoom', id => {\n      dispatch(writeRoomId(id));\n      dispatch(setYouIsCreatorRoom());\n      router.push('/lobby');\n    });\n    socket.on('confirmJoinRoom', room => {\n      dispatch(setCurrentRoom(room));\n      dispatch(setUsersCurrentRoom(room.users));\n      console.log(room);\n      dispatch(setYouIsVisitor());\n      router.push('/lobby');\n    });\n    socket.on('addUserInRoom', user => {\n      dispatch(addUserCurrentRoom(user));\n    });\n    socket.on('leaveYourselfFromRoom', () => {\n      dispatch(resetCurrentRoom());\n      router.push('/');\n    });\n    socket.on('leaveUserFromRoom', userId => {\n      dispatch(removeUserCurrentRoom(userId));\n      console.log(userId);\n    });\n    socket.on('destroyRoom', () => {\n      router.push('/');\n      dispatch(showModalAlert('You destroyed room'));\n      dispatch(resetCurrentRoom());\n    });\n    socket.on('leaveFromDestroyRoom', () => {\n      router.push('/');\n      dispatch(showModalAlert('Room destroyed'));\n      dispatch(resetCurrentRoom());\n    });\n    socket.on('showAlert', text => {\n      dispatch(showModalAlert(text));\n    });\n    /* Game session */\n\n    socket.on('startGameSession', () => {\n      router.push('/joystick');\n    });\n    socket.on('loadingGameProcess', loadingStatus => {\n      console.log(`${loadingStatus} - loading... (data from server)`);\n    }); // export function addUserCurrentRoom(user) {\n    //   return {\n    //     type: ADD_USER_CURRENT_ROOM,\n    //     payload: user,\n    //   };\n    // }\n    // export function removeUserCurrentRoom(id) {\n    //   return {\n    //     type: REMOVE_USER_CURRENT_ROOM,\n    //     payload: id,\n    //   };\n    // }\n  }, []);\n  return null;\n};\n\nexport { SocketCalls };","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/utils/sockets/index.js"],"names":["useEffect","socket","useRouter","useSelector","writeRooms","addRoom","removeRoom","onMessages","addMessage","onUser","hideModalInputUser","showModalAlert","onUsers","setYouIsCreatorRoom","writeRoomId","setCurrentRoom","setYouIsVisitor","setUsersCurrentRoom","addUserCurrentRoom","removeUserCurrentRoom","resetCurrentRoom","SocketCalls","dispatch","useDispatch","router","on","user","users","message","rooms","room","id","push","console","log","userId","text","loadingStatus"],"mappings":"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","sourcesContent":["/* imports */\nimport { useEffect } from 'react'\nimport { socket } from '../../Socket'\nimport { useRouter } from 'next/router'\n/* redux */\nimport {  useSelector } from 'react-redux'\nimport { writeRooms, addRoom, removeRoom } from '../../../redux/actions/Rooms'\nimport { onMessages, addMessage } from '../../../redux/actions/Chat'\nimport { onUser } from '../../../redux/actions/InputName'\nimport {\n  hideModalInputUser,\n  showModalAlert,\n} from '../../../redux/actions/Modals'\nimport { onUsers } from '../../../redux/actions/Users'\nimport {\n  setYouIsCreatorRoom,\n  writeRoomId,\n  setCurrentRoom,\n  setYouIsVisitor,\n  setUsersCurrentRoom,\n  addUserCurrentRoom,\n  removeUserCurrentRoom,\n  resetCurrentRoom,\n} from '../../../redux/actions/Room'\n\nconst SocketCalls = () => {\n  const dispatch = useDispatch()\n  const router = useRouter()\n  useEffect(() => {\n    socket.on('user', (user) => {\n      dispatch(onUser(user))\n      dispatch(hideModalInputUser())\n    })\n    socket.on('users', (users) => {\n      dispatch(onUsers(users))\n    })\n    socket.on('message', (message) => {\n      dispatch(addMessage(message))\n    })\n    socket.on('rooms', (rooms) => {\n      dispatch(writeRooms(rooms))\n    })\n    socket.on('addedRoom', (room) => {\n      dispatch(addRoom(room))\n    })\n    socket.on('removeRoom', (id) => {\n      dispatch(removeRoom(id))\n    })\n    socket.on('createdRoom', (id) => {\n      dispatch(writeRoomId(id))\n      dispatch(setYouIsCreatorRoom())\n      router.push('/lobby')\n    })\n    socket.on('confirmJoinRoom', (room) => {\n      dispatch(setCurrentRoom(room))\n      dispatch(setUsersCurrentRoom(room.users))\n      console.log(room)\n      dispatch(setYouIsVisitor())\n      router.push('/lobby')\n    })\n    socket.on('addUserInRoom', (user) => {\n      dispatch(addUserCurrentRoom(user))\n    })\n    socket.on('leaveYourselfFromRoom', () => {\n      dispatch(resetCurrentRoom())\n      router.push('/')\n    })\n    socket.on('leaveUserFromRoom', (userId) => {\n      dispatch(removeUserCurrentRoom(userId))\n      console.log(userId)\n    })\n    socket.on('destroyRoom', () => {\n      router.push('/')\n      dispatch(showModalAlert('You destroyed room'))\n      dispatch(resetCurrentRoom())\n    })\n    socket.on('leaveFromDestroyRoom', () => {\n      router.push('/')\n      dispatch(showModalAlert('Room destroyed'))\n      dispatch(resetCurrentRoom())\n    })\n    socket.on('showAlert', (text) => {\n      dispatch(showModalAlert(text))\n    })\n    /* Game session */\n\n    socket.on('startGameSession', () => {\n      \n      router.push('/joystick')\n    })\n    socket.on('loadingGameProcess', (loadingStatus) => {\n      console.log(`${loadingStatus} - loading... (data from server)`)\n    })\n\n    // export function addUserCurrentRoom(user) {\n    //   return {\n    //     type: ADD_USER_CURRENT_ROOM,\n    //     payload: user,\n    //   };\n    // }\n\n    // export function removeUserCurrentRoom(id) {\n    //   return {\n    //     type: REMOVE_USER_CURRENT_ROOM,\n    //     payload: id,\n    //   };\n    // }\n  }, [])\n  return null\n}\n\nexport { SocketCalls }\n"]},"metadata":{},"sourceType":"module"}