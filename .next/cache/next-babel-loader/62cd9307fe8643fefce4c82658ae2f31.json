{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Modals/ModalConfigGame/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* imports */\nimport { useState } from 'react';\nimport styled from 'styled-components';\n/* components */\n\nimport Backdrop from '../../Backdrop';\nimport Button from '../../Button';\nimport Input from '../../Input';\n/* redux */\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideModalSettingsRoom } from '../../../../redux/actions/Modals';\nimport { writeRoomConfig } from '../../../../redux/actions/Room';\n/* socket */\n\nimport { socket } from '../../../Socket';\nconst Container = styled.div.withConfig({\n  displayName: \"ModalConfigGame__Container\",\n  componentId: \"sc-18gg3iw-0\"\n})([\"margin:0 auto;width:90%;@media (min-width:400px){width:80%;}@media (min-width:800px){width:60%;}@media (min-width:1200px){width:40%;}\"]);\nconst Heading = styled.h1.withConfig({\n  displayName: \"ModalConfigGame__Heading\",\n  componentId: \"sc-18gg3iw-1\"\n})([\"font-size:24px;font-weight:700;text-align:center;letter-spacing:1px;text-transform:uppercase;margin-top:74px;\"]);\nconst Text = styled.p.withConfig({\n  displayName: \"ModalConfigGame__Text\",\n  componentId: \"sc-18gg3iw-2\"\n})([\"font-weight:700;font-size:14px;text-align:center;letter-spacing:1px;text-transform:uppercase;color:#bdff00;\"]);\n\nconst ModalConfigGame = () => {\n  const dispatch = useDispatch();\n  const roomId = useSelector(state => state.room.roomId);\n  const configs = useSelector(state => state.room.roomConfig);\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  return __jsx(React.Fragment, null, __jsx(Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"configs\"), __jsx(\"div\", {\n    style: {\n      marginTop: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"MESSAGE (DESCRIPTION OF ROOM)\"), __jsx(Input, {\n    onChange: e => {\n      setMessage(e.target.value);\n    },\n    style: {\n      margin: '20px auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), __jsx(Text, {\n    style: {\n      marginTop: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"LIMIT PLAYERS\"), __jsx(Input, {\n    style: {\n      width: 180,\n      margin: '20px auto',\n      textAlign: 'center',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), __jsx(Text, {\n    style: {\n      marginTop: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"MODE\"), __jsx(Text, {\n    style: {\n      marginTop: 12,\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"INFINITY\"), __jsx(Button, {\n    style: {\n      width: '40%',\n      position: 'absolute',\n      bottom: '5%',\n      left: '50%',\n      transform: 'translate(-50%, 0)'\n    },\n    onClick: () => {\n      const configs = [];\n      dispatch(writeRoomConfig({\n        roomId,\n        limitPlayers: 'inf',\n        message,\n        mode: 'INFINITY'\n      }));\n      socket.emit('activateRoom', configs);\n      dispatch(hideModalSettingsRoom());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Enter\")))));\n};\n\nexport default ModalConfigGame;","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Modals/ModalConfigGame/index.js"],"names":["useState","styled","Backdrop","Button","Input","useDispatch","useSelector","hideModalSettingsRoom","writeRoomConfig","socket","Container","div","Heading","h1","Text","p","ModalConfigGame","dispatch","roomId","state","room","configs","roomConfig","message","setMessage","marginTop","e","target","value","margin","width","textAlign","padding","color","position","bottom","left","transform","limitPlayers","mode","emit"],"mappings":"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","sourcesContent":["/* imports */\nimport { useState } from 'react';\nimport styled from 'styled-components';\n/* components */\nimport Backdrop from '../../Backdrop';\nimport Button from '../../Button';\nimport Input from '../../Input';\n/* redux */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideModalSettingsRoom } from '../../../../redux/actions/Modals';\nimport { writeRoomConfig } from '../../../../redux/actions/Room';\n/* socket */\nimport { socket } from '../../../Socket';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 90%;\n  @media (min-width: 400px) {\n    width: 80%;\n  }\n  @media (min-width: 800px) {\n    width: 60%;\n  }\n  @media (min-width: 1200px) {\n    width: 40%;\n  }\n`;\nconst Heading = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  text-align: center;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  margin-top: 74px;\n`;\nconst Text = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  text-align: center;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  color: #bdff00;\n`;\n\nconst ModalConfigGame = () => {\n  const dispatch = useDispatch();\n\n  const roomId = useSelector((state) => state.room.roomId);\n  const configs = useSelector((state) => state.room.roomConfig);\n\n  const [message, setMessage] = useState('');\n\n  return (\n    <>\n      <Backdrop>\n        <Container>\n          <Heading>configs</Heading>\n          <div style={{ marginTop: 50 }}>\n            <Text>MESSAGE (DESCRIPTION OF ROOM)</Text>\n            <Input\n              onChange={(e) => {\n                setMessage(e.target.value);\n              }}\n              style={{ margin: '20px auto' }}\n            />\n            <Text style={{ marginTop: 12 }}>LIMIT PLAYERS</Text>\n            <Input\n              style={{\n                width: 180,\n                margin: '20px auto',\n                textAlign: 'center',\n                padding: 0,\n              }}\n            />\n            <Text style={{ marginTop: 12 }}>MODE</Text>\n            <Text style={{ marginTop: 12, color: '#fff' }}>INFINITY</Text>\n            <Button\n              style={{\n                width: '40%',\n                position: 'absolute',\n                bottom: '5%',\n                left: '50%',\n                transform: 'translate(-50%, 0)',\n              }}\n              onClick={() => {\n                const configs= []\n                dispatch(\n                  writeRoomConfig({\n                    roomId,\n                    limitPlayers: 'inf',\n                    message,\n                    mode: 'INFINITY',\n                  })\n                );\n                socket.emit('activateRoom', configs);\n                dispatch(hideModalSettingsRoom());\n              }}\n            >\n              Enter\n            </Button>\n          </div>\n        </Container>\n      </Backdrop>\n    </>\n  );\n};\n\nexport default ModalConfigGame;\n"]},"metadata":{},"sourceType":"module"}