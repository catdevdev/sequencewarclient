{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Window/Chat/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* Imports */\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n/* Sockets */\n\nimport { socket } from '../../../Socket';\n/* redux */\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage, onMessages } from '../../../../redux/actions/Chat';\nimport { add } from '../../../../redux/actions/Chat';\nvar ChatContainer = styled.div.withConfig({\n  displayName: \"Chat__ChatContainer\",\n  componentId: \"pe5ftr-0\"\n})([\"height:40%;display:flex;flex-direction:column;justify-content:space-between;width:80%;@media (max-width:1350px){width:90%;}margin:0 auto;\"]);\n_c = ChatContainer;\nvar ChatArea = styled.div.withConfig({\n  displayName: \"Chat__ChatArea\",\n  componentId: \"pe5ftr-1\"\n})([\"height:100%;overflow:auto;\"]);\n_c2 = ChatArea;\nvar MessageContainer = styled.div.withConfig({\n  displayName: \"Chat__MessageContainer\",\n  componentId: \"pe5ftr-2\"\n})([\"display:flex;justify-content:flex-start;margin:10px 0;\"]);\n_c3 = MessageContainer;\nvar Nickname = styled.p.withConfig({\n  displayName: \"Chat__Nickname\",\n  componentId: \"pe5ftr-3\"\n})([\"font-weight:700;font-size:15px;color:\", \";\"], function (_ref) {\n  var textColor = _ref.textColor;\n  return textColor;\n});\n_c4 = Nickname;\nvar Message = styled.p.withConfig({\n  displayName: \"Chat__Message\",\n  componentId: \"pe5ftr-4\"\n})([\"font-weight:700;font-size:15px;color:#fff;padding-left:15px;\"]);\n_c5 = Message;\nvar ChatInput = styled.input.withConfig({\n  displayName: \"Chat__ChatInput\",\n  componentId: \"pe5ftr-5\"\n})([\"width:100%;height:40px;background:transparent;border:1px solid #fff;border-radius:5px;font-family:'Space Mono',sans-serif;font-size:16px;color:rgba(255,255,255,0.9);padding-left:20px;outline:none;\"]);\n_c6 = ChatInput;\nvar ChatButton = styled.button.withConfig({\n  displayName: \"Chat__ChatButton\",\n  componentId: \"pe5ftr-6\"\n})([\"width:70px;height:40px;background:transparent;border:1px solid #fff;border-radius:5px;margin-left:30px;color:#fff;\"]);\n_c7 = ChatButton;\nvar newMessageArray = [];\n\nvar Chat = function Chat() {\n  _s();\n\n  var dispatch = useDispatch();\n  var chat = useSelector(function (state) {\n    return state.chat;\n  });\n\n  var _useState = useState(''),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  var _useState2 = useState([]),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var sendMessageHandler = function sendMessageHandler() {\n    socket.emit('message', message);\n  };\n\n  useEffect(function () {\n    socket.on('message', function (message) {\n      // let newArray = [...messages];\n      // console.log(newArray);\n      // newArray.push(message);\n      // console.log(newArray);\n      // setMessages(newArray);\n      var tempArr = _toConsumableArray(messages);\n\n      tempArr.push(message);\n      setMessages(tempArr);\n    }); // console.log(messages);\n  }, []);\n  return __jsx(ChatContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, __jsx(ChatArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, messages.map(function (_ref2, index) {\n    var message = _ref2.message,\n        userName = _ref2.userName,\n        textColor = _ref2.textColor;\n    return __jsx(MessageContainer, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, __jsx(Nickname, {\n      textColor: textColor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, userName, '>'), __jsx(Message, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, message));\n  })), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '100px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(ChatInput, {\n    value: message,\n    onChange: function onChange(e) {\n      setMessage(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), __jsx(ChatButton, {\n    onClick: sendMessageHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"ENTER\")));\n};\n\n_s(Chat, \"L3doBxNPZU+CEAV1UBO759HCAqM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c8 = Chat;\nexport default Chat;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatArea\");\n$RefreshReg$(_c3, \"MessageContainer\");\n$RefreshReg$(_c4, \"Nickname\");\n$RefreshReg$(_c5, \"Message\");\n$RefreshReg$(_c6, \"ChatInput\");\n$RefreshReg$(_c7, \"ChatButton\");\n$RefreshReg$(_c8, \"Chat\");","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Window/Chat/index.js"],"names":["useState","useEffect","styled","socket","useDispatch","useSelector","addMessage","onMessages","add","ChatContainer","div","ChatArea","MessageContainer","Nickname","p","textColor","Message","ChatInput","input","ChatButton","button","newMessageArray","Chat","dispatch","chat","state","message","setMessage","messages","setMessages","sendMessageHandler","emit","on","tempArr","push","map","index","userName","width","height","display","alignItems","e","target","value"],"mappings":";;;;;;;;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA;;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,gCAAvC;AACA,SAASC,GAAT,QAAoB,gCAApB;AAGA,IAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,iJAAnB;KAAMD,a;AAcN,IAAME,QAAQ,GAAGT,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,kCAAd;MAAMC,Q;AAKN,IAAMC,gBAAgB,GAAGV,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,8DAAtB;MAAME,gB;AAON,IAAMC,QAAQ,GAAGX,MAAM,CAACY,CAAV;AAAA;AAAA;AAAA,mDAIH;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SAAmBA,SAAnB;AAAA,CAJG,CAAd;MAAMF,Q;AAON,IAAMG,OAAO,GAAGd,MAAM,CAACY,CAAV;AAAA;AAAA;AAAA,oEAAb;MAAME,O;AAQN,IAAMC,SAAS,GAAGf,MAAM,CAACgB,KAAV;AAAA;AAAA;AAAA,4MAAf;MAAMD,S;AAiBN,IAAME,UAAU,GAAGjB,MAAM,CAACkB,MAAV;AAAA;AAAA;AAAA,0HAAhB;MAAMD,U;AAYN,IAAIE,eAAe,GAAG,EAAtB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AACA,MAAMoB,IAAI,GAAGnB,WAAW,CAAC,UAACoB,KAAD;AAAA,WAAWA,KAAK,CAACD,IAAjB;AAAA,GAAD,CAAxB;;AAFiB,kBAGaxB,QAAQ,CAAC,EAAD,CAHrB;AAAA,MAGV0B,OAHU;AAAA,MAGDC,UAHC;;AAAA,mBAIe3B,QAAQ,CAAC,EAAD,CAJvB;AAAA,MAIV4B,QAJU;AAAA,MAIAC,WAJA;;AAMjB,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B3B,IAAAA,MAAM,CAAC4B,IAAP,CAAY,SAAZ,EAAuBL,OAAvB;AAED,GAHD;;AAKAzB,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,MAAM,CAAC6B,EAAP,CAAU,SAAV,EAAqB,UAACN,OAAD,EAAa;AAChC;AACA;AACA;AACA;AACA;AACA,UAAIO,OAAO,sBAAOL,QAAP,CAAX;;AACAK,MAAAA,OAAO,CAACC,IAAR,CAAaR,OAAb;AACAG,MAAAA,WAAW,CAACI,OAAD,CAAX;AACD,KATD,EADc,CAWd;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QAAQ,CAACO,GAAT,CAAa,iBAAmCC,KAAnC;AAAA,QAAGV,OAAH,SAAGA,OAAH;AAAA,QAAYW,QAAZ,SAAYA,QAAZ;AAAA,QAAsBtB,SAAtB,SAAsBA,SAAtB;AAAA,WACZ,MAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEqB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,SAAS,EAAErB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGsB,QADH,EAEG,GAFH,CADF,EAKE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUX,OAAV,CALF,CADY;AAAA,GAAb,CADH,CADF,EAYE;AACE,IAAA,KAAK,EAAE;AACLY,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,OAFH;AAGLC,MAAAA,OAAO,EAAE,MAHJ;AAILC,MAAAA,UAAU,EAAE;AAJP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEf,OADT;AAEE,IAAA,QAAQ,EAAE,kBAACgB,CAAD,EAAO;AACff,MAAAA,UAAU,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAcE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAEd,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,CAZF,CADF;AA+BD,CAxDD;;GAAMR,I;UACalB,W,EACJC,W;;;MAFTiB,I;AA0DN,eAAeA,IAAf","sourcesContent":["/* Imports */\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n/* Sockets */\nimport { socket } from '../../../Socket';\n/* redux */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage, onMessages } from '../../../../redux/actions/Chat';\nimport { add } from '../../../../redux/actions/Chat';\n\n\nconst ChatContainer = styled.div`\n  height: 40%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 80%;\n  @media (max-width: 1350px) {\n    width: 90%;\n  }\n  /* height: 100%; */\n  margin: 0 auto;\n`;\n\nconst ChatArea = styled.div`\n  height: 100%;\n  overflow: auto;\n`;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n\n  margin: 10px 0;\n`;\n\nconst Nickname = styled.p`\n  font-weight: 700;\n  font-size: 15px;\n\n  color: ${({ textColor }) => textColor};\n`;\n\nconst Message = styled.p`\n  font-weight: 700;\n  font-size: 15px;\n\n  color: #fff;\n  padding-left: 15px;\n`;\n\nconst ChatInput = styled.input`\n  width: 100%;\n  height: 40px;\n\n  background: transparent;\n  border: 1px solid #fff;\n  border-radius: 5px;\n\n  font-family: 'Space Mono', sans-serif;\n  font-size: 16px;\n  color: rgba(255, 255, 255, 0.9);\n\n  padding-left: 20px;\n\n  outline: none;\n`;\n\nconst ChatButton = styled.button`\n  width: 70px;\n  height: 40px;\n\n  background: transparent;\n  border: 1px solid #fff;\n  border-radius: 5px;\n\n  margin-left: 30px;\n  color: #fff;\n`;\n\nlet newMessageArray = [];\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n  const chat = useSelector((state) => state.chat);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const sendMessageHandler = () => {\n    socket.emit('message', message);\n    \n  };\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      // let newArray = [...messages];\n      // console.log(newArray);\n      // newArray.push(message);\n      // console.log(newArray);\n      // setMessages(newArray);\n      let tempArr = [...messages];\n      tempArr.push(message);\n      setMessages(tempArr);\n    });\n    // console.log(messages);\n  }, []);\n\n  return (\n    <ChatContainer>\n      <ChatArea>\n        {messages.map(({ message, userName, textColor }, index) => (\n          <MessageContainer key={index}>\n            <Nickname textColor={textColor}>\n              {userName}\n              {'>'}\n            </Nickname>\n            <Message>{message}</Message>\n          </MessageContainer>\n        ))}\n      </ChatArea>\n      <div\n        style={{\n          width: '100%',\n          height: '100px',\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <ChatInput\n          value={message}\n          onChange={(e) => {\n            setMessage(e.target.value);\n          }}\n        ></ChatInput>\n        <ChatButton onClick={sendMessageHandler}>ENTER</ChatButton>\n      </div>\n    </ChatContainer>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}