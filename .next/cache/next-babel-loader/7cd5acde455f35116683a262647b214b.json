{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Window/Rooms/Table/Row/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nconst RowContainer = styled.div.withConfig({\n  displayName: \"Row__RowContainer\",\n  componentId: \"sc-16s1zcg-0\"\n})([\"width:100%;height:\", \";display:flex;justify-content:flex-start;\"], ({\n  primary\n}) => primary);\nconst Cell = styled.div.withConfig({\n  displayName: \"Row__Cell\",\n  componentId: \"sc-16s1zcg-1\"\n})([\"width:\", \"%;height:100%;display:flex;align-items:center;\"], ({\n  width\n}) => width);\nconst Data = styled.div.withConfig({\n  displayName: \"Row__Data\",\n  componentId: \"sc-16s1zcg-2\"\n})([\"font-size:14px;color:\"]);\nconst Button = styled.div.withConfig({\n  displayName: \"Row__Button\",\n  componentId: \"sc-16s1zcg-3\"\n})([\"\"]);\n\nconst Row = ({\n  primary,\n  dataPrimary,\n  widthCells,\n  rowData\n}) => {\n  return __jsx(React.Fragment, null, \" \", primary ? __jsx(React.Fragment, null, __jsx(RowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, dataPrimary.map(({\n    data\n  }, index) => {\n    if (data) return __jsx(Cell, {\n      key: index,\n      width: widthCells[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, data);\n  }))) : __jsx(React.Fragment, null, __jsx(RowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, dataPrimary.map(({\n    data,\n    button\n  }, index) => {\n    if (data && !button) return __jsx(Cell, {\n      key: index,\n      width: widthCells[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, data);else if (data && button) {\n      return __jsx(Cell, {\n        key: index,\n        width: widthCells[index],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, data);\n    }\n  }))), \" \");\n};\n\nexport default Row;","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Window/Rooms/Table/Row/index.js"],"names":["styled","RowContainer","div","primary","Cell","width","Data","Button","Row","dataPrimary","widthCells","rowData","map","data","index","button"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,wEAEN,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiBA,OAFX,CAAlB;AAQA,MAAMC,IAAI,GAAGJ,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,iEACC,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAeA,KADhB,CAAV;AAQA,MAAMC,IAAI,GAAGN,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,6BAAV;AAKA,MAAMK,MAAM,GAAGP,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,QAAZ;;AAEA,MAAMM,GAAG,GAAG,CAAC;AAAEL,EAAAA,OAAF;AAAWM,EAAAA,WAAX;AAAwBC,EAAAA,UAAxB;AAAoCC,EAAAA;AAApC,CAAD,KAAmD;AAC7D,SACE,4BACG,GADH,EAEGR,OAAO,GACN,4BACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,WAAW,CAACG,GAAZ,CAAgB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAWC,KAAX,KAAqB;AACpC,QAAID,IAAJ,EACE,OACE,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEC,KAAX;AAAkB,MAAA,KAAK,EAAEJ,UAAU,CAACI,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,CADF;AAKH,GAPA,CADH,CADF,CADM,GAcN,4BACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WAAW,CAACG,GAAZ,CAAgB,CAAC;AAAEC,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAD,EAAmBD,KAAnB,KAA6B;AAC5C,QAAID,IAAI,IAAI,CAACE,MAAb,EACE,OACE,MAAC,IAAD;AAAM,MAAA,GAAG,EAAED,KAAX;AAAkB,MAAA,KAAK,EAAEJ,UAAU,CAACI,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,CADF,CADF,KAMK,IAAIA,IAAI,IAAIE,MAAZ,EAAoB;AACvB,aACE,MAAC,IAAD;AAAM,QAAA,GAAG,EAAED,KAAX;AAAkB,QAAA,KAAK,EAAEJ,UAAU,CAACI,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IADH,CADF;AAKD;AACF,GAdA,CADH,CADF,CAhBJ,EAmCK,GAnCL,CADF;AAuCD,CAxCD;;AA0CA,eAAeL,GAAf","sourcesContent":["import styled from \"styled-components\";\n\nconst RowContainer = styled.div`\n  width: 100%;\n  height: ${({ primary }) => primary};\n\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst Cell = styled.div`\n  width: ${({ width }) => width}%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n`;\n\nconst Data = styled.div`\n  font-size: 14px;\n  color:\n`;\n\nconst Button = styled.div``;\n\nconst Row = ({ primary, dataPrimary, widthCells, rowData }) => {\n  return (\n    <>\n      {\" \"}\n      {primary ? (\n        <>\n          <RowContainer>\n            {dataPrimary.map(({ data }, index) => {\n              if (data)\n                return (\n                  <Cell key={index} width={widthCells[index]}>\n                    {data}\n                  </Cell>\n                );\n            })}\n          </RowContainer>\n        </>\n      ) : (\n        <>\n          <RowContainer>\n            {dataPrimary.map(({ data, button }, index) => {\n              if (data && !button)\n                return (\n                  <Cell key={index} width={widthCells[index]}>\n                    {data}\n                  </Cell>\n                );\n              else if (data && button) {\n                return (\n                  <Cell key={index} width={widthCells[index]}>\n                    {data}\n                  </Cell>\n                );\n              }\n            })}\n          </RowContainer>\n        </>\n      )}{\" \"}\n    </>\n  );\n};\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}