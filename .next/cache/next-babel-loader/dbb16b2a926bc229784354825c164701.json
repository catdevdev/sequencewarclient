{"ast":null,"code":"/* imports */\nimport { useEffect } from 'react';\nimport { socket } from '../../Socket';\nimport { useRouter } from 'next/router';\n/* redux */\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { writeRooms, addRoom } from '../../../redux/actions/Rooms';\nimport { onMessages, addMessage } from '../../../redux/actions/Chat';\nimport { onUser } from '../../../redux/actions/InputName';\nimport { hideModalInputUser, showModalAlert } from '../../../redux/actions/Modals';\nimport { onUsers } from '../../../redux/actions/Users';\nimport { setYouIsCreatorRoom, writeRoomId, setCurrentRoom, setYouIsVisitor, setUsersCurrentRoom, addUserCurrentRoom, removeUserCurrentRoom } from '../../../redux/actions/Room';\n\nconst SocketCalls = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  useEffect(() => {\n    socket.on('user', user => {\n      dispatch(onUser(user));\n      dispatch(hideModalInputUser());\n    });\n    socket.on('users', users => {\n      dispatch(onUsers(users));\n    });\n    socket.on('message', message => {\n      dispatch(addMessage(message));\n    });\n    socket.on('rooms', rooms => {\n      dispatch(writeRooms(rooms));\n    });\n    socket.on('addedRoom', room => {\n      dispatch(addRoom(room));\n    });\n    socket.on('createdRoom', id => {\n      dispatch(writeRoomId(id));\n      dispatch(setYouIsCreatorRoom());\n      router.push('/lobby');\n    });\n    socket.on('confirmJoinRoom', room => {\n      dispatch(setCurrentRoom(room));\n      dispatch(setUsersCurrentRoom(room.users));\n      console.log(room);\n      dispatch(setYouIsVisitor());\n      router.push('/lobby');\n    });\n    socket.on('addUserInRoom', user => {\n      dispatch(addUserCurrentRoom(user));\n    });\n    socket.on('leaveYourselfFromRoom', () => {\n      router.push('/');\n    });\n    socket.on('leaveUserFromRoom', userId => {\n      dispatch(removeUserCurrentRoom(userId));\n      console.log(userId);\n    });\n    socket.on('showAlert', text => {\n      dispatch(showModalAlert(text));\n    }); // export function addUserCurrentRoom(user) {\n    //   return {\n    //     type: ADD_USER_CURRENT_ROOM,\n    //     payload: user,\n    //   };\n    // }\n    // export function removeUserCurrentRoom(id) {\n    //   return {\n    //     type: REMOVE_USER_CURRENT_ROOM,\n    //     payload: id,\n    //   };\n    // }\n  }, []);\n  return null;\n};\n\nexport { SocketCalls };","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/utils/sockets/index.js"],"names":["useEffect","socket","useRouter","useDispatch","useSelector","writeRooms","addRoom","onMessages","addMessage","onUser","hideModalInputUser","showModalAlert","onUsers","setYouIsCreatorRoom","writeRoomId","setCurrentRoom","setYouIsVisitor","setUsersCurrentRoom","addUserCurrentRoom","removeUserCurrentRoom","SocketCalls","dispatch","router","on","user","users","message","rooms","room","id","push","console","log","userId","text"],"mappings":"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","sourcesContent":["/* imports */\nimport { useEffect } from 'react';\nimport { socket } from '../../Socket';\nimport { useRouter } from 'next/router';\n/* redux */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { writeRooms, addRoom } from '../../../redux/actions/Rooms';\nimport { onMessages, addMessage } from '../../../redux/actions/Chat';\nimport { onUser } from '../../../redux/actions/InputName';\nimport {\n  hideModalInputUser,\n  showModalAlert,\n} from '../../../redux/actions/Modals';\nimport { onUsers } from '../../../redux/actions/Users';\nimport {\n  setYouIsCreatorRoom,\n  writeRoomId,\n  setCurrentRoom,\n  setYouIsVisitor,\n  setUsersCurrentRoom,\n  addUserCurrentRoom,\n  removeUserCurrentRoom,\n} from '../../../redux/actions/Room';\n\nconst SocketCalls = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  useEffect(() => {\n    socket.on('user', (user) => {\n      dispatch(onUser(user));\n      dispatch(hideModalInputUser());\n    });\n    socket.on('users', (users) => {\n      dispatch(onUsers(users));\n    });\n    socket.on('message', (message) => {\n      dispatch(addMessage(message));\n    });\n    socket.on('rooms', (rooms) => {\n      dispatch(writeRooms(rooms));\n    });\n    socket.on('addedRoom', (room) => {\n      dispatch(addRoom(room));\n    });\n    socket.on('createdRoom', (id) => {\n      dispatch(writeRoomId(id));\n      dispatch(setYouIsCreatorRoom());\n      router.push('/lobby');\n    });\n    socket.on('confirmJoinRoom', (room) => {\n      dispatch(setCurrentRoom(room));\n      dispatch(setUsersCurrentRoom(room.users));\n      console.log(room);\n      dispatch(setYouIsVisitor());\n      router.push('/lobby');\n    });\n    socket.on('addUserInRoom', (user) => {\n      dispatch(addUserCurrentRoom(user));\n    });\n    socket.on('leaveYourselfFromRoom', () => {\n      router.push('/');\n    });\n    socket.on('leaveUserFromRoom', (userId) => {\n      dispatch(removeUserCurrentRoom(userId));\n      console.log(userId);\n    });\n    socket.on('showAlert', (text) => {\n      dispatch(showModalAlert(text));\n    });\n\n    // export function addUserCurrentRoom(user) {\n    //   return {\n    //     type: ADD_USER_CURRENT_ROOM,\n    //     payload: user,\n    //   };\n    // }\n\n    // export function removeUserCurrentRoom(id) {\n    //   return {\n    //     type: REMOVE_USER_CURRENT_ROOM,\n    //     payload: id,\n    //   };\n    // }\n  }, []);\n  return null;\n};\n\nexport { SocketCalls };\n"]},"metadata":{},"sourceType":"module"}