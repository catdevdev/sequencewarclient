{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/UICalls/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* components */\nimport ModalConfigGame from '../Modals/ModalConfigGame';\nimport ModalInput from '../Modals/ModalInput';\nimport ModalChat from '../Mobile/Chat';\nimport { useEffect } from 'react';\n/* redux */\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showModalInputUser } from '../../../redux/actions/InputName';\nimport { showModalMobileChat, hideModalMobileChat } from '../../../redux/actions/Chat';\n\nvar UICalls = function UICalls() {\n  _s();\n\n  var dispatch = useDispatch();\n  var showModalInputUserCondition = useSelector(function (state) {\n    return state.modalInputUser.show;\n  });\n  var showModalMobileChatCondition = useSelector(function (state) {\n    return state.chat.showMobileChat;\n  });\n  console.log(showModalMobileChatCondition);\n  console.log(showModalInputUserCondition);\n  useEffect(function () {\n    // localStorage.setItem('user', 'Tom');\n    if (!localStorage.getItem('userName')) {\n      dispatch(showModalInputUser());\n    }\n  }, []);\n  return __jsx(React.Fragment, null, showModalInputUserCondition && __jsx(ModalInput, {\n    message: \"Enter your nickname\",\n    submitText: \"ENTER\",\n    color: \"green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), showModalMobileChatCondition && __jsx(MoChat, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 40\n    }\n  }));\n};\n\n_s(UICalls, \"gYrEz5NxUhuSA3DxVxRuD6Qu40k=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UICalls;\nexport default UICalls;\n\nvar _c;\n\n$RefreshReg$(_c, \"UICalls\");","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/UICalls/index.js"],"names":["ModalConfigGame","ModalInput","ModalChat","useEffect","useDispatch","useSelector","showModalInputUser","showModalMobileChat","hideModalMobileChat","UICalls","dispatch","showModalInputUserCondition","state","modalInputUser","show","showModalMobileChatCondition","chat","showMobileChat","console","log","localStorage","getItem"],"mappings":";;;;;;;AAAA;AACA,OAAOA,eAAP,MAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,SAASC,SAAT,QAA0B,OAA1B;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SACEC,mBADF,EAEEC,mBAFF,QAGO,6BAHP;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,2BAA2B,GAAGN,WAAW,CAC7C,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,cAAN,CAAqBC,IAAhC;AAAA,GAD6C,CAA/C;AAGA,MAAMC,4BAA4B,GAAGV,WAAW,CAC9C,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACI,IAAN,CAAWC,cAAtB;AAAA,GAD8C,CAAhD;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,4BAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYR,2BAAZ;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAI,CAACiB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAL,EAAuC;AACrCX,MAAAA,QAAQ,CAACJ,kBAAkB,EAAnB,CAAR;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOA,SACE,4BACGK,2BAA2B,IAC1B,MAAC,UAAD;AACE,IAAA,OAAO,EAAC,qBADV;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,KAAK,EAAC,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUGI,4BAA4B,IAAI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVnC,CADF;AAeD,CAlCD;;GAAMN,O;UACaL,W,EACmBC,W,EAGCA,W;;;KALjCI,O;AAoCN,eAAeA,OAAf","sourcesContent":["/* components */\nimport ModalConfigGame from '../Modals/ModalConfigGame';\nimport ModalInput from '../Modals/ModalInput';\nimport ModalChat from '../Mobile/Chat';\n\nimport { useEffect } from 'react';\n/* redux */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showModalInputUser } from '../../../redux/actions/InputName';\nimport {\n  showModalMobileChat,\n  hideModalMobileChat,\n} from '../../../redux/actions/Chat';\n\nconst UICalls = () => {\n  const dispatch = useDispatch();\n  const showModalInputUserCondition = useSelector(\n    (state) => state.modalInputUser.show\n  );\n  const showModalMobileChatCondition = useSelector(\n    (state) => state.chat.showMobileChat\n  );\n\n  console.log(showModalMobileChatCondition);\n  console.log(showModalInputUserCondition);\n\n  useEffect(() => {\n    // localStorage.setItem('user', 'Tom');\n    if (!localStorage.getItem('userName')) {\n      dispatch(showModalInputUser());\n    }\n  }, []);\n\n  return (\n    <>\n      {showModalInputUserCondition && (\n        <ModalInput\n          message=\"Enter your nickname\"\n          submitText=\"ENTER\"\n          color=\"green\"\n        />\n      )}\n      {/* <ModalConfigGame></ModalConfigGame> */}\n\n      {showModalMobileChatCondition && <MoChat></MoChat>}\n      \n    </>\n  );\n};\n\nexport default UICalls;\n"]},"metadata":{},"sourceType":"module"}