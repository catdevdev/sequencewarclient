{"ast":null,"code":"/* imports */\nimport { useEffect } from 'react';\nimport { socket } from '../../Socket';\nimport { useRouter } from 'next/router';\n/* redux */\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { writeRooms, addRoom } from '../../../redux/actions/Rooms';\nimport { onMessages, addMessage } from '../../../redux/actions/Chat';\nimport { onUser } from '../../../redux/actions/InputName';\nimport { hideModalInputUser } from '../../../redux/actions/Modals';\nimport { onUsers } from '../../../redux/actions/Users';\nimport { setYouIsCreatorRoom, writeRoomId, setCurrentRoom, setYouIsVisitor, setUsersCurrentRoom } from '../../../redux/actions/Room';\n\nconst SocketCalls = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  useEffect(() => {\n    socket.on('user', user => {\n      dispatch(onUser(user));\n      dispatch(hideModalInputUser());\n    });\n    socket.on('users', users => {\n      dispatch(onUsers(users));\n    });\n    socket.on('message', message => {\n      dispatch(addMessage(message));\n    });\n    socket.on('rooms', rooms => {\n      dispatch(writeRooms(rooms));\n    });\n    socket.on('addedRoom', room => {\n      dispatch(addRoom(room));\n    });\n    socket.on('createdRoom', id => {\n      dispatch(writeRoomId(id));\n      dispatch(setYouIsCreatorRoom());\n      router.push('/lobby');\n    });\n    socket.on('confirmJoinRoom', room => {\n      dispatch(setCurrentRoom(room));\n      dispatch(setUsersCurrentRoom(room.users));\n      console.log(room);\n      dispatch(setYouIsVisitor());\n      router.push('/lobby');\n    });\n    socket.on('addUserInRoom', user => {\n      di;\n    }); // export function addUserCurrentRoom(user) {\n    //   return {\n    //     type: ADD_USER_CURRENT_ROOM,\n    //     payload: user,\n    //   };\n    // }\n    // export function removeUserCurrentRoom(id) {\n    //   return {\n    //     type: REMOVE_USER_CURRENT_ROOM,\n    //     payload: id,\n    //   };\n    // }\n  }, []);\n  return null;\n};\n\nexport { SocketCalls };","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/utils/sockets/index.js"],"names":["useEffect","socket","useRouter","useDispatch","useSelector","writeRooms","addRoom","onMessages","addMessage","onUser","hideModalInputUser","onUsers","setYouIsCreatorRoom","writeRoomId","setCurrentRoom","setYouIsVisitor","setUsersCurrentRoom","SocketCalls","dispatch","router","on","user","users","message","rooms","room","id","push","console","log","di"],"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,8BAApC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,6BAAvC;AACA,SAASC,MAAT,QAAuB,kCAAvB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SACEC,mBADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,mBALF,QAMO,6BANP;;AAQA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,MAAM,GAAGjB,SAAS,EAAxB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,MAAM,CAACmB,EAAP,CAAU,MAAV,EAAmBC,IAAD,IAAU;AAC1BH,MAAAA,QAAQ,CAACT,MAAM,CAACY,IAAD,CAAP,CAAR;AACAH,MAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACD,KAHD;AAIAT,IAAAA,MAAM,CAACmB,EAAP,CAAU,OAAV,EAAoBE,KAAD,IAAW;AAC5BJ,MAAAA,QAAQ,CAACP,OAAO,CAACW,KAAD,CAAR,CAAR;AACD,KAFD;AAGArB,IAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAsBG,OAAD,IAAa;AAChCL,MAAAA,QAAQ,CAACV,UAAU,CAACe,OAAD,CAAX,CAAR;AACD,KAFD;AAGAtB,IAAAA,MAAM,CAACmB,EAAP,CAAU,OAAV,EAAoBI,KAAD,IAAW;AAC5BN,MAAAA,QAAQ,CAACb,UAAU,CAACmB,KAAD,CAAX,CAAR;AACD,KAFD;AAGAvB,IAAAA,MAAM,CAACmB,EAAP,CAAU,WAAV,EAAwBK,IAAD,IAAU;AAC/BP,MAAAA,QAAQ,CAACZ,OAAO,CAACmB,IAAD,CAAR,CAAR;AACD,KAFD;AAGAxB,IAAAA,MAAM,CAACmB,EAAP,CAAU,aAAV,EAA0BM,EAAD,IAAQ;AAC/BR,MAAAA,QAAQ,CAACL,WAAW,CAACa,EAAD,CAAZ,CAAR;AACAR,MAAAA,QAAQ,CAACN,mBAAmB,EAApB,CAAR;AACAO,MAAAA,MAAM,CAACQ,IAAP,CAAY,QAAZ;AACD,KAJD;AAKA1B,IAAAA,MAAM,CAACmB,EAAP,CAAU,iBAAV,EAA8BK,IAAD,IAAU;AACrCP,MAAAA,QAAQ,CAACJ,cAAc,CAACW,IAAD,CAAf,CAAR;AACAP,MAAAA,QAAQ,CAACF,mBAAmB,CAACS,IAAI,CAACH,KAAN,CAApB,CAAR;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAP,MAAAA,QAAQ,CAACH,eAAe,EAAhB,CAAR;AACAI,MAAAA,MAAM,CAACQ,IAAP,CAAY,QAAZ;AACD,KAND;AAOA1B,IAAAA,MAAM,CAACmB,EAAP,CAAU,eAAV,EAA4BC,IAAD,IAAQ;AACjCS,MAAAA,EAAE;AACH,KAFD,EA7Bc,CAiCd;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD,GA9CQ,EA8CN,EA9CM,CAAT;AA+CA,SAAO,IAAP;AACD,CAnDD;;AAqDA,SAASb,WAAT","sourcesContent":["/* imports */\nimport { useEffect } from 'react';\nimport { socket } from '../../Socket';\nimport { useRouter } from 'next/router';\n/* redux */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { writeRooms, addRoom } from '../../../redux/actions/Rooms';\nimport { onMessages, addMessage } from '../../../redux/actions/Chat';\nimport { onUser } from '../../../redux/actions/InputName';\nimport { hideModalInputUser } from '../../../redux/actions/Modals';\nimport { onUsers } from '../../../redux/actions/Users';\nimport {\n  setYouIsCreatorRoom,\n  writeRoomId,\n  setCurrentRoom,\n  setYouIsVisitor,\n  setUsersCurrentRoom,\n} from '../../../redux/actions/Room';\n\nconst SocketCalls = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  useEffect(() => {\n    socket.on('user', (user) => {\n      dispatch(onUser(user));\n      dispatch(hideModalInputUser());\n    });\n    socket.on('users', (users) => {\n      dispatch(onUsers(users));\n    });\n    socket.on('message', (message) => {\n      dispatch(addMessage(message));\n    });\n    socket.on('rooms', (rooms) => {\n      dispatch(writeRooms(rooms));\n    });\n    socket.on('addedRoom', (room) => {\n      dispatch(addRoom(room));\n    });\n    socket.on('createdRoom', (id) => {\n      dispatch(writeRoomId(id));\n      dispatch(setYouIsCreatorRoom());\n      router.push('/lobby');\n    });\n    socket.on('confirmJoinRoom', (room) => {\n      dispatch(setCurrentRoom(room));\n      dispatch(setUsersCurrentRoom(room.users));\n      console.log(room);\n      dispatch(setYouIsVisitor());\n      router.push('/lobby');\n    });\n    socket.on('addUserInRoom', (user)=>{\n      di\n    });\n\n    // export function addUserCurrentRoom(user) {\n    //   return {\n    //     type: ADD_USER_CURRENT_ROOM,\n    //     payload: user,\n    //   };\n    // }\n\n    // export function removeUserCurrentRoom(id) {\n    //   return {\n    //     type: REMOVE_USER_CURRENT_ROOM,\n    //     payload: id,\n    //   };\n    // }\n  }, []);\n  return null;\n};\n\nexport { SocketCalls };\n"]},"metadata":{},"sourceType":"module"}