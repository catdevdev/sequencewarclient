{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* imports */\nimport { useEffect } from 'react';\nimport { socket } from '../../Socket';\nimport { useRouter } from 'next/router';\n/* redux */\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { writeRooms, addRoom } from '../../../redux/actions/Rooms';\nimport { onMessages, addMessage } from '../../../redux/actions/Chat';\nimport { onUser } from '../../../redux/actions/InputName';\nimport { hideModalInputUser } from '../../../redux/actions/Modals';\nimport { onUsers } from '../../../redux/actions/Users';\nimport { setYouIsCreatorRoom, writeRoomId, setCurrentRoom } from '../../../redux/actions/Room';\n\nvar SocketCalls = function SocketCalls() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  useEffect(function () {\n    socket.on('user', function (user) {\n      dispatch(onUser(user));\n      dispatch(hideModalInputUser());\n    });\n    socket.on('users', function (users) {\n      dispatch(onUsers(users));\n    });\n    socket.on('message', function (message) {\n      dispatch(addMessage(message));\n    });\n    socket.on('rooms', function (rooms) {\n      dispatch(writeRooms(rooms));\n    });\n    socket.on('addedRoom', function (room) {\n      dispatch(addRoom(room));\n    });\n    socket.on('createdRoom', function (id) {\n      dispatch(writeRoomId(id));\n      dispatch(setYouIsCreatorRoom());\n      router.push('/lobby');\n    });\n    socket.on('confirmJoinRoom', function (room) {\n      dispatch(setCurrentRoom(room));\n      dispatch(setYouIsVisitor());\n      router.push('/lobby');\n    });\n  }, []);\n  return null;\n};\n\n_s(SocketCalls, \"dfK0q129ToldU1hhc+dQGV7CLZ8=\", false, function () {\n  return [useDispatch, useRouter];\n});\n\n_c = SocketCalls;\nexport { SocketCalls };\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketCalls\");","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/utils/sockets/index.js"],"names":["useEffect","socket","useRouter","useDispatch","useSelector","writeRooms","addRoom","onMessages","addMessage","onUser","hideModalInputUser","onUsers","setYouIsCreatorRoom","writeRoomId","setCurrentRoom","SocketCalls","dispatch","router","on","user","users","message","rooms","room","id","push","setYouIsVisitor"],"mappings":";;AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,8BAApC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,6BAAvC;AACA,SAASC,MAAT,QAAuB,kCAAvB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,mBAAT,EAA8BC,WAA9B,EAA2CC,cAA3C,QAAiE,6BAAjE;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACxB,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,MAAMc,MAAM,GAAGf,SAAS,EAAxB;AACAF,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,MAAM,CAACiB,EAAP,CAAU,MAAV,EAAkB,UAACC,IAAD,EAAU;AAC1BH,MAAAA,QAAQ,CAACP,MAAM,CAACU,IAAD,CAAP,CAAR;AACAH,MAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;AACD,KAHD;AAIAT,IAAAA,MAAM,CAACiB,EAAP,CAAU,OAAV,EAAmB,UAACE,KAAD,EAAW;AAC5BJ,MAAAA,QAAQ,CAACL,OAAO,CAACS,KAAD,CAAR,CAAR;AACD,KAFD;AAGAnB,IAAAA,MAAM,CAACiB,EAAP,CAAU,SAAV,EAAqB,UAACG,OAAD,EAAa;AAChCL,MAAAA,QAAQ,CAACR,UAAU,CAACa,OAAD,CAAX,CAAR;AACD,KAFD;AAGApB,IAAAA,MAAM,CAACiB,EAAP,CAAU,OAAV,EAAmB,UAACI,KAAD,EAAW;AAC5BN,MAAAA,QAAQ,CAACX,UAAU,CAACiB,KAAD,CAAX,CAAR;AACD,KAFD;AAGArB,IAAAA,MAAM,CAACiB,EAAP,CAAU,WAAV,EAAuB,UAACK,IAAD,EAAU;AAC/BP,MAAAA,QAAQ,CAACV,OAAO,CAACiB,IAAD,CAAR,CAAR;AACD,KAFD;AAGAtB,IAAAA,MAAM,CAACiB,EAAP,CAAU,aAAV,EAAyB,UAACM,EAAD,EAAQ;AAC/BR,MAAAA,QAAQ,CAACH,WAAW,CAACW,EAAD,CAAZ,CAAR;AACAR,MAAAA,QAAQ,CAACJ,mBAAmB,EAApB,CAAR;AACAK,MAAAA,MAAM,CAACQ,IAAP,CAAY,QAAZ;AACD,KAJD;AAKAxB,IAAAA,MAAM,CAACiB,EAAP,CAAU,iBAAV,EAA6B,UAACK,IAAD,EAAU;AACrCP,MAAAA,QAAQ,CAACF,cAAc,CAACS,IAAD,CAAf,CAAR;AACAP,MAAAA,QAAQ,CAACU,eAAe,EAAhB,CAAR;AACAT,MAAAA,MAAM,CAACQ,IAAP,CAAY,QAAZ;AACD,KAJD;AAKD,GA3BQ,EA2BN,EA3BM,CAAT;AA4BA,SAAO,IAAP;AACD,CAhCD;;GAAMV,W;UACaZ,W,EACFD,S;;;KAFXa,W;AAkCN,SAASA,WAAT","sourcesContent":["/* imports */\nimport { useEffect } from 'react';\nimport { socket } from '../../Socket';\nimport { useRouter } from 'next/router';\n/* redux */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { writeRooms, addRoom } from '../../../redux/actions/Rooms';\nimport { onMessages, addMessage } from '../../../redux/actions/Chat';\nimport { onUser } from '../../../redux/actions/InputName';\nimport { hideModalInputUser } from '../../../redux/actions/Modals';\nimport { onUsers } from '../../../redux/actions/Users';\nimport { setYouIsCreatorRoom, writeRoomId, setCurrentRoom } from '../../../redux/actions/Room';\n\nconst SocketCalls = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  useEffect(() => {\n    socket.on('user', (user) => {\n      dispatch(onUser(user));\n      dispatch(hideModalInputUser());\n    });\n    socket.on('users', (users) => {\n      dispatch(onUsers(users));\n    });\n    socket.on('message', (message) => {\n      dispatch(addMessage(message));\n    });\n    socket.on('rooms', (rooms) => {\n      dispatch(writeRooms(rooms));\n    });\n    socket.on('addedRoom', (room) => {\n      dispatch(addRoom(room));\n    });\n    socket.on('createdRoom', (id) => {\n      dispatch(writeRoomId(id));\n      dispatch(setYouIsCreatorRoom());\n      router.push('/lobby');\n    });\n    socket.on('confirmJoinRoom', (room) => {\n      dispatch(setCurrentRoom(room));\n      dispatch(setYouIsVisitor());\n      router.push('/lobby');\n    });\n  }, []);\n  return null;\n};\n\nexport { SocketCalls };\n"]},"metadata":{},"sourceType":"module"}