{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { WRITE_ROOMS, ADD_ROOM } from '../actiontypes';\nconst initialState = {\n  rooms: null\n};\nexport const roomsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case WRITE_ROOMS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rooms: action.payload\n      });\n\n    case ADD_ROOM:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rooms: [...state.rooms, action.payload]\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/redux/reducers/rooms.js"],"names":["WRITE_ROOMS","ADD_ROOM","initialState","rooms","roomsReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAL;AACE,6CAAYK,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAAjC;;AACF,SAAKP,QAAL;AACE,6CAAYI,KAAZ;AAAmBF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACE,OAAxB;AAA1B;;AAEF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVM","sourcesContent":["import { WRITE_ROOMS, ADD_ROOM } from '../actiontypes';\n\nconst initialState = {\n  rooms: null,\n};\n\nexport const roomsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case WRITE_ROOMS:\n      return { ...state, rooms: action.payload };\n    case ADD_ROOM:\n      return { ...state, rooms: [...state.rooms, action.payload] };\n      \n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}