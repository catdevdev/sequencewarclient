{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* imports */\nimport { useEffect } from 'react';\nimport { socket } from '../../Socket';\n/* redux */\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { writeRooms, addRoom } from '../../../redux/actions/Rooms';\n\nvar SocketCalls = function SocketCalls() {\n  _s();\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    socket.on('rooms', function (rooms) {\n      dispatch(writeRooms(rooms));\n    });\n    socket.on('addRoom', function (room) {\n      dispatch(addRoom(room));\n    });\n  }, []);\n  return null;\n};\n\n_s(SocketCalls, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SocketCalls;\nexport { SocketCalls };\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketCalls\");","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/utils/sockets/index.js"],"names":["useEffect","socket","useDispatch","useSelector","writeRooms","addRoom","SocketCalls","dispatch","on","rooms","room"],"mappings":";;AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,8BAApC;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACxB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,YAAM;AAEdC,IAAAA,MAAM,CAACO,EAAP,CAAU,OAAV,EAAmB,UAACC,KAAD,EAAW;AAC5BF,MAAAA,QAAQ,CAACH,UAAU,CAACK,KAAD,CAAX,CAAR;AACD,KAFD;AAGAR,IAAAA,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqB,UAACE,IAAD,EAAU;AAC7BH,MAAAA,QAAQ,CAACF,OAAO,CAACK,IAAD,CAAR,CAAR;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AASA,SAAO,IAAP;AACD,CAZD;;GAAMJ,W;UACaJ,W;;;KADbI,W;AAcN,SAASA,WAAT","sourcesContent":["/* imports */\nimport { useEffect } from 'react';\nimport { socket } from '../../Socket';\n/* redux */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { writeRooms, addRoom } from '../../../redux/actions/Rooms';\n\n\nconst SocketCalls = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n\n    socket.on('rooms', (rooms) => {\n      dispatch(writeRooms(rooms));\n    });\n    socket.on('addRoom', (room) => {\n      dispatch(addRoom(room));\n    });\n  }, []);\n  return null;\n};\n\nexport { SocketCalls };\n"]},"metadata":{},"sourceType":"module"}