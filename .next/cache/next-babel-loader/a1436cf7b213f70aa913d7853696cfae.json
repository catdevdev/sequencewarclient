{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Button/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\n/* display: block;\n\n  width: 320px;\n  height: 90px;\n\n  border-radius: 5px;\n  background: #00a9ce;\n\n  color: #fff;\n  font-size: 32px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: bold;\n\n  border: none;\n  outline: none; */\n\nconst StyledButton = styled.button.withConfig({\n  displayName: \"Button__StyledButton\",\n  componentId: \"sc-125w077-0\"\n})([\"display:block;width:\", \";height:\", \";\"], ({\n  widht\n}) => width, {});\n\nconst Button = ({\n  children,\n  style,\n  width,\n  height\n}) => {\n  return __jsx(StyledButton, {\n    width: width,\n    height: height,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Button/index.js"],"names":["styled","StyledButton","button","widht","width","Button","children","style","height"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA;;;;;;;;;;;;;;;;AAeA,MAAMC,YAAY,GAAGD,MAAM,CAACE,MAAV;AAAA;AAAA;AAAA,8CAGP,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeC,KAHR,EAIL,EAJK,CAAlB;;AAOA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBH,EAAAA,KAAnB;AAA0BI,EAAAA;AAA1B,CAAD,KAAwC;AACrD,SACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEJ,KAArB;AAA4B,IAAA,MAAM,EAAEI,MAApC;AAA4C,IAAA,KAAK,EAAED,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CAND;;AAQA,eAAeD,MAAf","sourcesContent":["import styled from \"styled-components\";\n/* display: block;\n\n  width: 320px;\n  height: 90px;\n\n  border-radius: 5px;\n  background: #00a9ce;\n\n  color: #fff;\n  font-size: 32px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: bold;\n\n  border: none;\n  outline: none; */\nconst StyledButton = styled.button`\n  display: block;\n\n  width: ${({ widht }) => width};\n  height: ${({})};\n`;\n\nconst Button = ({ children, style, width, height }) => {\n  return (\n    <StyledButton width={width} height={height} style={style}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}