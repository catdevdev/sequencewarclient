{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Mobile/Window/Records/Record/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nconst RecordContainer = styled.div.withConfig({\n  displayName: \"Record__RecordContainer\",\n  componentId: \"sc-1nf14lv-0\"\n})([\"width:100%;\"]);\nconst Row = styled.div.withConfig({\n  displayName: \"Record__Row\",\n  componentId: \"sc-1nf14lv-1\"\n})([\"display:flex;\"]);\nconst Name = styled.div.withConfig({\n  displayName: \"Record__Name\",\n  componentId: \"sc-1nf14lv-2\"\n})([\"width:30%;font-size\"]);\nconst Value = styled.div.withConfig({\n  displayName: \"Record__Value\",\n  componentId: \"sc-1nf14lv-3\"\n})([\"width:70%;\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"Record__Button\",\n  componentId: \"sc-1nf14lv-4\"\n})([\"background:rgba(255,255,255,0.1);border:2px solid rgba(255,255,255,0.8);border-radius:8px;font-weight:700;font-size:18px;\"]);\n\nconst Record = ({\n  record,\n  dataPrimary\n}) => {\n  let rows = [];\n\n  for (let i = 0; i < record.length; i++) {\n    if (record[i].button) {\n      rows[i] = __jsx(Row, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, record[i].data));\n    } else if (record[i].data) {\n      rows[i] = __jsx(Row, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, __jsx(Name, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, dataPrimary[i].data), __jsx(Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, record[i].data));\n    }\n  }\n\n  return __jsx(RecordContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, rows);\n};\n\nexport default Record;","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Mobile/Window/Records/Record/index.js"],"names":["styled","RecordContainer","div","Row","Name","Value","Button","button","Record","record","dataPrimary","rows","i","length","data"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,mBAArB;AAIA,MAAMC,GAAG,GAAGH,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,qBAAT;AAIA,MAAME,IAAI,GAAGJ,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,2BAAV;AAKA,MAAMG,KAAK,GAAGL,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,kBAAX;AAIA,MAAMI,MAAM,GAAGN,MAAM,CAACO,MAAV;AAAA;AAAA;AAAA,iIAAZ;;AASA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AAC1C,MAAIC,IAAI,GAAG,EAAX;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAIH,MAAM,CAACG,CAAD,CAAN,CAAUL,MAAd,EAAsB;AACpBI,MAAAA,IAAI,CAACC,CAAD,CAAJ,GACE,MAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASH,MAAM,CAACG,CAAD,CAAN,CAAUE,IAAnB,CADF,CADF;AAKD,KAND,MAMO,IAAIL,MAAM,CAACG,CAAD,CAAN,CAAUE,IAAd,EAAoB;AACzBH,MAAAA,IAAI,CAACC,CAAD,CAAJ,GACE,MAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,WAAW,CAACE,CAAD,CAAX,CAAeE,IAAtB,CADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQL,MAAM,CAACG,CAAD,CAAN,CAAUE,IAAlB,CAFF,CADF;AAMD;AACF;;AACD,SAAO,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBH,IAAlB,CAAP;AACD,CApBD;;AAsBA,eAAeH,MAAf","sourcesContent":["import styled from 'styled-components';\n\nconst RecordContainer = styled.div`\n  width: 100%;\n`;\n\nconst Row = styled.div`\n  display: flex;\n`;\n\nconst Name = styled.div`\n  width: 30%;\n  font-size\n`;\n\nconst Value = styled.div`\n  width: 70%;\n`;\n\nconst Button = styled.button`\n  background: rgba(255, 255, 255, 0.1);\n  border: 2px solid rgba(255, 255, 255, 0.8);\n  border-radius: 8px;\n\n  font-weight: 700;\n  font-size: 18px;\n`;\n\nconst Record = ({ record, dataPrimary }) => {\n  let rows = [];\n\n  for (let i = 0; i < record.length; i++) {\n    if (record[i].button) {\n      rows[i] = (\n        <Row key={i}>\n          <Button>{record[i].data}</Button>\n        </Row>\n      );\n    } else if (record[i].data) {\n      rows[i] = (\n        <Row key={i}>\n          <Name>{dataPrimary[i].data}</Name>\n          <Value>{record[i].data}</Value>\n        </Row>\n      );\n    }\n  }\n  return <RecordContainer>{rows}</RecordContainer>;\n};\n\nexport default Record;\n"]},"metadata":{},"sourceType":"module"}