{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_MESSAGE, ON_MESSAGES } from '../actiontypes';\nvar initialState = {\n  messages: [],\n  show: show\n};\nexport var chatReducer = function chatReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_MESSAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        messages: [].concat(_toConsumableArray(state.messages), [action.payload])\n      });\n\n    case ON_MESSAGES:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/redux/reducers/chat.js"],"names":["ADD_MESSAGE","ON_MESSAGES","initialState","messages","show","chatReducer","state","action","type","payload"],"mappings":";;;;;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,gBAAzC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,IAAI,EAAJA;AAFmB,CAArB;AAKA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE,6CAAYM,KAAZ;AAAmBH,QAAAA,QAAQ,+BAAMG,KAAK,CAACH,QAAZ,IAAsBI,MAAM,CAACE,OAA7B;AAA3B;;AACF,SAAKR,WAAL;AACE,aAAOM,MAAM,CAACE,OAAd;;AAEF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVM","sourcesContent":["import { ADD_MESSAGE, ON_MESSAGES } from '../actiontypes';\n\nconst initialState = {\n  messages: [],\n  show\n};\n\nexport const chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      return { ...state, messages: [...state.messages, action.payload] };\n    case ON_MESSAGES:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}