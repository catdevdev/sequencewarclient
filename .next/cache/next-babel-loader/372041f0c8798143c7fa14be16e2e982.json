{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Window/Chat/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* Imports */\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n/* Sockets */\n\nimport { socket } from '../../../Socket';\n/* redux */\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage, onMessages } from '../../../../redux/actions/Chat';\nconst ChatContainer = styled.div.withConfig({\n  displayName: \"Chat__ChatContainer\",\n  componentId: \"pe5ftr-0\"\n})([\"height:40%;display:flex;flex-direction:column;justify-content:space-between;width:80%;@media (max-width:1350px){width:90%;}margin:0 auto;\"]);\nconst ChatArea = styled.div.withConfig({\n  displayName: \"Chat__ChatArea\",\n  componentId: \"pe5ftr-1\"\n})([\"height:100%;overflow:auto;\"]);\nconst MessageContainer = styled.div.withConfig({\n  displayName: \"Chat__MessageContainer\",\n  componentId: \"pe5ftr-2\"\n})([\"display:flex;justify-content:flex-start;margin:10px 0;\"]);\nconst Nickname = styled.p.withConfig({\n  displayName: \"Chat__Nickname\",\n  componentId: \"pe5ftr-3\"\n})([\"font-weight:700;font-size:15px;color:\", \";\"], ({\n  userColor\n}) => senderColor);\nconst Message = styled.p.withConfig({\n  displayName: \"Chat__Message\",\n  componentId: \"pe5ftr-4\"\n})([\"font-weight:700;font-size:15px;color:#fff;padding-left:15px;color:\", \";\"], ({\n  messageColor\n}) => messageColor);\nconst ChatInput = styled.input.withConfig({\n  displayName: \"Chat__ChatInput\",\n  componentId: \"pe5ftr-5\"\n})([\"width:100%;height:40px;background:transparent;border:1px solid #fff;border-radius:5px;font-family:'Space Mono',sans-serif;font-size:16px;color:rgba(255,255,255,0.9);padding-left:20px;outline:none;\"]);\nconst ChatButton = styled.button.withConfig({\n  displayName: \"Chat__ChatButton\",\n  componentId: \"pe5ftr-6\"\n})([\"width:70px;height:40px;background:transparent;border:1px solid #fff;border-radius:5px;margin-left:30px;color:#fff;\"]);\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n  const messages = useSelector(state => state.chat.messages);\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n\n  const sendMessageHandler = () => {\n    socket.emit('message', message);\n    setMessage('');\n  };\n\n  useEffect(() => {\n    socket.on('message', message => {\n      dispatch(addMessage(message));\n    });\n  }, []);\n  return __jsx(ChatContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(ChatArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, messages.map(({\n    message,\n    userName,\n    userColor,\n    messageColor\n  }, index) => __jsx(MessageContainer, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, __jsx(Nickname, {\n    userColor: userColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, userName, '>'), __jsx(Message, {\n    messageColor: messageColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, message)))), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '100px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(ChatInput, {\n    value: message,\n    onChange: e => {\n      setMessage(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), __jsx(ChatButton, {\n    onClick: sendMessageHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"ENTER\")));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Window/Chat/index.js"],"names":["useState","useEffect","styled","socket","useDispatch","useSelector","addMessage","onMessages","ChatContainer","div","ChatArea","MessageContainer","Nickname","p","userColor","senderColor","Message","messageColor","ChatInput","input","ChatButton","button","Chat","dispatch","messages","state","chat","message","setMessage","sendMessageHandler","emit","on","map","userName","index","width","height","display","alignItems","e","target","value"],"mappings":";;;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA;;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,gCAAvC;AAEA,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,iJAAnB;AAaA,MAAMC,QAAQ,GAAGR,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,kCAAd;AAIA,MAAME,gBAAgB,GAAGT,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,8DAAtB;AAMA,MAAMG,QAAQ,GAAGV,MAAM,CAACW,CAAV;AAAA;AAAA;AAAA,mDAIH,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmBC,WAJhB,CAAd;AAMA,MAAMC,OAAO,GAAGd,MAAM,CAACW,CAAV;AAAA;AAAA;AAAA,gFAMF,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAsBA,YANpB,CAAb;AAQA,MAAMC,SAAS,GAAGhB,MAAM,CAACiB,KAAV;AAAA;AAAA;AAAA,4MAAf;AAgBA,MAAMC,UAAU,GAAGlB,MAAM,CAACmB,MAAV;AAAA;AAAA;AAAA,0HAAhB;;AAYA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAMoB,QAAQ,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,QAAvB,CAA5B;AACA,QAAM;AAAA,OAACG,OAAD;AAAA,OAAUC;AAAV,MAAwB5B,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAM6B,kBAAkB,GAAG,MAAM;AAC/B1B,IAAAA,MAAM,CAAC2B,IAAP,CAAY,SAAZ,EAAuBH,OAAvB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAHD;;AAKA3B,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAAC4B,EAAP,CAAU,SAAV,EAAsBJ,OAAD,IAAa;AAChCJ,MAAAA,QAAQ,CAACjB,UAAU,CAACqB,OAAD,CAAX,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACQ,GAAT,CACC,CAAC;AAAEL,IAAAA,OAAF;AAAWM,IAAAA,QAAX;AAAqBnB,IAAAA,SAArB;AAAgCG,IAAAA;AAAhC,GAAD,EAAiDiB,KAAjD,KACE,MAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,SAAS,EAAEpB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmB,QADH,EAEG,GAFH,CADF,EAKE,MAAC,OAAD;AAAS,IAAA,YAAY,EAAEhB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCU,OAAtC,CALF,CAFH,CADH,CADF,EAcE;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,OAFH;AAGLC,MAAAA,OAAO,EAAE,MAHJ;AAILC,MAAAA,UAAU,EAAE;AAJP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEX,OADT;AAEE,IAAA,QAAQ,EAAGY,CAAD,IAAO;AACfX,MAAAA,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAcE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAEZ,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,CAdF,CADF;AAiCD,CAjDD;;AAmDA,eAAeP,IAAf","sourcesContent":["/* Imports */\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n/* Sockets */\nimport { socket } from '../../../Socket';\n/* redux */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage, onMessages } from '../../../../redux/actions/Chat';\n\nconst ChatContainer = styled.div`\n  height: 40%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 80%;\n  @media (max-width: 1350px) {\n    width: 90%;\n  }\n  /* height: 100%; */\n  margin: 0 auto;\n`;\nconst ChatArea = styled.div`\n  height: 100%;\n  overflow: auto;\n`;\nconst MessageContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n\n  margin: 10px 0;\n`;\nconst Nickname = styled.p`\n  font-weight: 700;\n  font-size: 15px;\n\n  color: ${({ userColor }) => senderColor};\n`;\nconst Message = styled.p`\n  font-weight: 700;\n  font-size: 15px;\n\n  color: #fff;\n  padding-left: 15px;\n  color: ${({ messageColor }) => messageColor};\n`;\nconst ChatInput = styled.input`\n  width: 100%;\n  height: 40px;\n\n  background: transparent;\n  border: 1px solid #fff;\n  border-radius: 5px;\n\n  font-family: 'Space Mono', sans-serif;\n  font-size: 16px;\n  color: rgba(255, 255, 255, 0.9);\n\n  padding-left: 20px;\n\n  outline: none;\n`;\nconst ChatButton = styled.button`\n  width: 70px;\n  height: 40px;\n\n  background: transparent;\n  border: 1px solid #fff;\n  border-radius: 5px;\n\n  margin-left: 30px;\n  color: #fff;\n`;\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n  const messages = useSelector((state) => state.chat.messages);\n  const [message, setMessage] = useState('');\n\n  const sendMessageHandler = () => {\n    socket.emit('message', message);\n    setMessage('');\n  };\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      dispatch(addMessage(message));\n    });\n  }, []);\n\n  return (\n    <ChatContainer>\n      <ChatArea>\n        {messages.map(\n          ({ message, userName, userColor, messageColor }, index) => (\n            <MessageContainer key={index}>\n              <Nickname userColor={userColor}>\n                {userName}\n                {'>'}\n              </Nickname>\n              <Message messageColor={messageColor}>{message}</Message>\n            </MessageContainer>\n          )\n        )}\n      </ChatArea>\n      <div\n        style={{\n          width: '100%',\n          height: '100px',\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <ChatInput\n          value={message}\n          onChange={(e) => {\n            setMessage(e.target.value);\n          }}\n        />\n        <ChatButton onClick={sendMessageHandler}>ENTER</ChatButton>\n      </div>\n    </ChatContainer>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}