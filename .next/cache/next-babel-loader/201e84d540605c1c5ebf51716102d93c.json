{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Mobile/Window/Records/Record/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nvar RecordContainer = styled.div.withConfig({\n  displayName: \"Record__RecordContainer\",\n  componentId: \"sc-1nf14lv-0\"\n})([\"width:100%;margin:30px 0;\"]);\n_c = RecordContainer;\nvar Row = styled.div.withConfig({\n  displayName: \"Record__Row\",\n  componentId: \"sc-1nf14lv-1\"\n})([\"display:flex;\"]);\n_c2 = Row;\nvar Name = styled.div.withConfig({\n  displayName: \"Record__Name\",\n  componentId: \"sc-1nf14lv-2\"\n})([\"width:30%;border-right:1px solid #fff;font-size:18px;font-weight:700;letter-spacing:1px;text-align:right;padding:10px 12px 0;color:\", \";\"], function (_ref) {\n  var color = _ref.color;\n  return color;\n});\n_c3 = Name;\nvar Value = styled.div.withConfig({\n  displayName: \"Record__Value\",\n  componentId: \"sc-1nf14lv-3\"\n})([\"font-size:16px;font-weight:700;letter-spacing:1px;width:70%;padding:10px 0 0 20px;color:\", \";\"], function (_ref2) {\n  var color = _ref2.color;\n  return color;\n});\n_c4 = Value;\nvar Button = styled.button.withConfig({\n  displayName: \"Record__Button\",\n  componentId: \"sc-1nf14lv-4\"\n})([\"margin-top:15px;width:100%;height:45px;background:rgba(255,255,255,0.1);border:2px solid rgba(255,255,255,0.8);border-radius:8px;font-weight:700;font-size:18px;text-transform:uppercase;\"]);\n_c5 = Button;\n\nvar Record = function Record(_ref3) {\n  var record = _ref3.record,\n      dataPrimary = _ref3.dataPrimary;\n  var rows = [];\n\n  for (var i = 0; i < record.length; i++) {\n    if (record[i].button) {\n      rows[i] = __jsx(Row, {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, record[i].data));\n    } else if (record[i].data) {\n      rows[i] = __jsx(Row, {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, __jsx(Name, {\n        color: dataPrimary[i].color,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, dataPrimary[i].data), __jsx(Value, {\n        color: record[i].color,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, record[i].data));\n    } else if (record[i].colorSpaceship) {\n      console.log(2);\n\n      __jsx(Row, {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, __jsx(Name, {\n        color: dataPrimary[i].color,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, \"123\"), __jsx(Value, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, \"123\"));\n    }\n  }\n\n  return __jsx(RecordContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  }, rows);\n};\n\n_c6 = Record;\nexport default Record;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"RecordContainer\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Name\");\n$RefreshReg$(_c4, \"Value\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Record\");","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Mobile/Window/Records/Record/index.js"],"names":["styled","RecordContainer","div","Row","Name","color","Value","Button","button","Record","record","dataPrimary","rows","i","length","data","colorSpaceship","console","log"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,eAAe,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,iCAArB;KAAMD,e;AAKN,IAAME,GAAG,GAAGH,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,qBAAT;MAAMC,G;AAIN,IAAMC,IAAI,GAAGJ,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,iJAWC;AAAA,MAAGG,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAf;AAAA,CAXD,CAAV;MAAMD,I;AAcN,IAAME,KAAK,GAAGN,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,sGAMA;AAAA,MAAGG,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAf;AAAA,CANA,CAAX;MAAMC,K;AASN,IAAMC,MAAM,GAAGP,MAAM,CAACQ,MAAV;AAAA;AAAA;AAAA,iMAAZ;MAAMD,M;;AAaN,IAAME,MAAM,GAAG,SAATA,MAAS,QAA6B;AAAA,MAA1BC,MAA0B,SAA1BA,MAA0B;AAAA,MAAlBC,WAAkB,SAAlBA,WAAkB;AAC1C,MAAIC,IAAI,GAAG,EAAX;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAIH,MAAM,CAACG,CAAD,CAAN,CAAUL,MAAd,EAAsB;AACpBI,MAAAA,IAAI,CAACC,CAAD,CAAJ,GACE,MAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASH,MAAM,CAACG,CAAD,CAAN,CAAUE,IAAnB,CADF,CADF;AAKD,KAND,MAMO,IAAIL,MAAM,CAACG,CAAD,CAAN,CAAUE,IAAd,EAAoB;AACzBH,MAAAA,IAAI,CAACC,CAAD,CAAJ,GACE,MAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,WAAW,CAACE,CAAD,CAAX,CAAeR,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCM,WAAW,CAACE,CAAD,CAAX,CAAeE,IAAnD,CADF,EAEE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAEL,MAAM,CAACG,CAAD,CAAN,CAAUR,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCK,MAAM,CAACG,CAAD,CAAN,CAAUE,IAA1C,CAFF,CADF;AAMD,KAPM,MAOA,IAAIL,MAAM,CAACG,CAAD,CAAN,CAAUG,cAAd,EAA8B;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;;AACA,YAAC,GAAD;AAAK,QAAA,GAAG,EAAEL,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,WAAW,CAACE,CAAD,CAAX,CAAeR,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAID;AACF;;AACD,SAAO,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBO,IAAlB,CAAP;AACD,CA1BD;;MAAMH,M;AA4BN,eAAeA,MAAf","sourcesContent":["import styled from 'styled-components';\n\nconst RecordContainer = styled.div`\n  width: 100%;\n  margin: 30px 0;\n`;\n\nconst Row = styled.div`\n  display: flex;\n`;\n\nconst Name = styled.div`\n  width: 30%;\n  border-right: 1px solid #fff;\n  font-size: 18px;\n  font-weight: 700;\n  letter-spacing: 1px;\n\n  text-align: right;\n\n  padding: 10px 12px 0;\n\n  color: ${({ color }) => color};\n`;\n\nconst Value = styled.div`\n  font-size: 16px;\n  font-weight: 700;\n  letter-spacing: 1px;\n  width: 70%;\n  padding: 10px 0 0 20px;\n  color: ${({ color }) => color};\n`;\n\nconst Button = styled.button`\n  margin-top: 15px;\n  width: 100%;\n  height: 45px;\n  background: rgba(255, 255, 255, 0.1);\n  border: 2px solid rgba(255, 255, 255, 0.8);\n  border-radius: 8px;\n\n  font-weight: 700;\n  font-size: 18px;\n  text-transform: uppercase;\n`;\n\nconst Record = ({ record, dataPrimary }) => {\n  let rows = [];\n\n  for (let i = 0; i < record.length; i++) {\n    if (record[i].button) {\n      rows[i] = (\n        <Row key={i}>\n          <Button>{record[i].data}</Button>\n        </Row>\n      );\n    } else if (record[i].data) {\n      rows[i] = (\n        <Row key={i}>\n          <Name color={dataPrimary[i].color}>{dataPrimary[i].data}</Name>\n          <Value color={record[i].color}>{record[i].data}</Value>\n        </Row>\n      );\n    } else if (record[i].colorSpaceship) {\n      console.log(2);\n      <Row key={i}>\n        <Name color={dataPrimary[i].color}>123</Name>\n        <Value >123</Value>\n      </Row>;\n    }\n  }\n  return <RecordContainer>{rows}</RecordContainer>;\n};\n\nexport default Record;\n"]},"metadata":{},"sourceType":"module"}