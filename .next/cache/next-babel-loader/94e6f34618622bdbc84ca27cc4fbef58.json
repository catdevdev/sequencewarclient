{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Mobile/Window/Records/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport Record from './Record';\nconst ContainerRecord = styled.div.withConfig({\n  displayName: \"Records__ContainerRecord\",\n  componentId: \"sc-15b71tr-0\"\n})([\"width:100%;\"]);\nconst dataPrimary = [{\n  data: 'Players',\n  center: true\n}, {\n  data: 'Mode'\n}, {\n  data: 'User'\n}, {\n  data: 'Message'\n}, {\n  data: 'test'\n}];\nconst rowsData = [[{\n  data: '1/20',\n  center: true\n}, {\n  data: 'Infinity waves'\n}, {\n  data: 'CATDEV'\n}, {\n  data: 'Заходите все сюда!!!!! Noobs only!'\n}, {\n  button: true,\n  data: 'Join',\n  center: true\n}], [{\n  data: '1/∞',\n  center: true\n}, {\n  data: 'Scores'\n}, {\n  data: 'Ania33'\n}, {\n  data: 'Go 500 players'\n}, {\n  button: true,\n  data: 'Join',\n  center: true\n}]];\n\nconst Records = ({\n  dataPrimary,\n  rowsData\n}) => {\n  return __jsx(ContainerRecord, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, rowsData && rowsData.map((rowData, i) => {\n    return __jsx(Record, {\n      record: rowData,\n      dataPrimary: dataPrimary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 18\n      }\n    });\n  }));\n};\n\nexport default Records;","map":{"version":3,"sources":["/Users/vlad/Desktop/projects/UnityProjects/sequencewarclient/components/UI/Mobile/Window/Records/index.js"],"names":["styled","Record","ContainerRecord","div","dataPrimary","data","center","rowsData","button","Records","map","rowData","i"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,mBAArB;AAIA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,MAAM,EAAE;AAFV,CADkB,EAKlB;AACED,EAAAA,IAAI,EAAE;AADR,CALkB,EAQlB;AACEA,EAAAA,IAAI,EAAE;AADR,CARkB,EAWlB;AACEA,EAAAA,IAAI,EAAE;AADR,CAXkB,EAclB;AACEA,EAAAA,IAAI,EAAE;AADR,CAdkB,CAApB;AAmBA,MAAME,QAAQ,GAAG,CACf,CACE;AACEF,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,MAAM,EAAE;AAFV,CADF,EAKE;AACED,EAAAA,IAAI,EAAE;AADR,CALF,EAQE;AACEA,EAAAA,IAAI,EAAE;AADR,CARF,EAWE;AACEA,EAAAA,IAAI,EAAE;AADR,CAXF,EAcE;AACEG,EAAAA,MAAM,EAAE,IADV;AAEEH,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAdF,CADe,EAqBf,CACE;AACED,EAAAA,IAAI,EAAE,KADR;AAEEC,EAAAA,MAAM,EAAE;AAFV,CADF,EAKE;AACED,EAAAA,IAAI,EAAE;AADR,CALF,EAQE;AACEA,EAAAA,IAAI,EAAE;AADR,CARF,EAWE;AACEA,EAAAA,IAAI,EAAE;AADR,CAXF,EAcE;AACEG,EAAAA,MAAM,EAAE,IADV;AAEEH,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAdF,CArBe,CAAjB;;AA2CA,MAAMG,OAAO,GAAG,CAAC;AAAEL,EAAAA,WAAF;AAAeG,EAAAA;AAAf,CAAD,KAA+B;AAC7C,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,IACPA,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC3B,WAAO,MAAC,MAAD;AAAQ,MAAA,MAAM,EAAED,OAAhB;AAAyB,MAAA,WAAW,EAAEP,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAFJ,CADF;AAQD,CATD;;AAWA,eAAeK,OAAf","sourcesContent":["import styled from 'styled-components';\n\nimport Record from './Record';\n\nconst ContainerRecord = styled.div`\n  width: 100%;\n`;\n\nconst dataPrimary = [\n  {\n    data: 'Players',\n    center: true,\n  },\n  {\n    data: 'Mode',\n  },\n  {\n    data: 'User',\n  },\n  {\n    data: 'Message',\n  },\n  {\n    data: 'test',\n  },\n];\n\nconst rowsData = [\n  [\n    {\n      data: '1/20',\n      center: true,\n    },\n    {\n      data: 'Infinity waves',\n    },\n    {\n      data: 'CATDEV',\n    },\n    {\n      data: 'Заходите все сюда!!!!! Noobs only!',\n    },\n    {\n      button: true,\n      data: 'Join',\n      center: true,\n    },\n  ],\n  [\n    {\n      data: '1/∞',\n      center: true,\n    },\n    {\n      data: 'Scores',\n    },\n    {\n      data: 'Ania33',\n    },\n    {\n      data: 'Go 500 players',\n    },\n    {\n      button: true,\n      data: 'Join',\n      center: true,\n    },\n  ],\n];\n\nconst Records = ({ dataPrimary, rowsData }) => {\n  return (\n    <ContainerRecord>\n      {rowsData &&\n        rowsData.map((rowData, i) => {\n          return <Record record={rowData} dataPrimary={dataPrimary} />;\n        })}\n    </ContainerRecord>\n  );\n};\n\nexport default Records;\n"]},"metadata":{},"sourceType":"module"}